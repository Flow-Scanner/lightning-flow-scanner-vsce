export let testdata = [
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Utility_Copy_Files_Subflow.flow-meta.xml",
        name: "Utility_Copy_Files_Subflow",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "57.0",
          ],
          assignments: [
            {
              name: [
                "Add_to_Collection",
              ],
              label: [
                "Add to Collection",
              ],
              locationX: [
                "138",
              ],
              locationY: [
                "674",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "colContentDocumentLinksNew",
                  ],
                  operator: [
                    "Add",
                  ],
                  value: [
                    {
                      elementReference: [
                        "Content_Document_Links",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Content_Document_Links",
                  ],
                },
              ],
            },
            {
              name: [
                "Set_Create_Target_Error",
              ],
              label: [
                "Set Create Target Error",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "974",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "There was an error creating the Target Document Links",
                      ],
                    },
                  ],
                },
              ],
            },
            {
              name: [
                "Set_Missing_Id_Error",
              ],
              label: [
                "Set Missing Id Error",
              ],
              locationX: [
                "842",
              ],
              locationY: [
                "242",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Either or both of the Source or Target record ids are blank.",
                      ],
                    },
                  ],
                },
              ],
            },
            {
              name: [
                "Set_No_Source_Error",
              ],
              label: [
                "Set No Source Error",
              ],
              locationX: [
                "578",
              ],
              locationY: [
                "458",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "There are no files attached to the Source record",
                      ],
                    },
                  ],
                },
              ],
            },
            {
              name: [
                "Set_Target_Link_Clear_Record_Id",
              ],
              label: [
                "Set Target Link & Clear Record Id",
              ],
              locationX: [
                "138",
              ],
              locationY: [
                "566",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "Content_Document_Links.LinkedEntityId",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vTargetObjectId",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "Content_Document_Links.Id",
                  ],
                  operator: [
                    "Assign",
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Add_to_Collection",
                  ],
                },
              ],
            },
          ],
          decisions: [
            {
              name: [
                "Found_Source_Files",
              ],
              label: [
                "Found Source Files?",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "350",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Set_No_Source_Error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "NO SOURCE FILES (Default)",
              ],
              rules: [
                {
                  name: [
                    "HAVE_FILES",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Get_Source_Files",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Content_Document_Links",
                      ],
                    },
                  ],
                  label: [
                    "HAVE FILES",
                  ],
                },
              ],
            },
            {
              name: [
                "Have_Record_Ids",
              ],
              label: [
                "Have Record Ids?",
              ],
              locationX: [
                "578",
              ],
              locationY: [
                "134",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Set_Missing_Id_Error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "MISSING (Default)",
              ],
              rules: [
                {
                  name: [
                    "HAVE_BOTH",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "vSourceObjectId",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vTargetObjectId",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vSourceObjectId",
                      ],
                      operator: [
                        "NotEqualTo",
                      ],
                      rightValue: [
                        {
                          stringValue: [
                            "",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vTargetObjectId",
                      ],
                      operator: [
                        "NotEqualTo",
                      ],
                      rightValue: [
                        {
                          stringValue: [
                            "",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Get_Source_Files",
                      ],
                    },
                  ],
                  label: [
                    "HAVE BOTH",
                  ],
                },
              ],
            },
          ],
          description: [
            "Copy all files/attachments from one record to another record.",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Utility - Copy Files - Subflow {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Utility - Copy Files - Subflow",
          ],
          loops: [
            {
              name: [
                "Content_Document_Links",
              ],
              label: [
                "Content Document Links",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "458",
              ],
              collectionReference: [
                "Get_Source_Files",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "Set_Target_Link_Clear_Record_Id",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "Create_Target_Content_Document_Links",
                  ],
                },
              ],
            },
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordCreates: [
            {
              name: [
                "Create_Target_Content_Document_Links",
              ],
              label: [
                "Create Target Content Document Links",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "866",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "Set_Create_Target_Error",
                  ],
                },
              ],
              inputReference: [
                "colContentDocumentLinksNew",
              ],
            },
          ],
          recordLookups: [
            {
              name: [
                "Get_Source_Files",
              ],
              label: [
                "Get Source Files",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "242",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "Found_Source_Files",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "LinkedEntityId",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vSourceObjectId",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "IsDeleted",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "false",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "false",
              ],
              object: [
                "ContentDocumentLink",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          runInMode: [
            "SystemModeWithoutSharing",
          ],
          start: [
            {
              locationX: [
                "452",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "Have_Record_Ids",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "colContentDocumentLinksNew",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "ContentDocumentLink",
              ],
            },
            {
              name: [
                "vErrorMessage",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "true",
              ],
            },
            {
              name: [
                "vIsError",
              ],
              dataType: [
                "Boolean",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "true",
              ],
              value: [
                {
                  booleanValue: [
                    "false",
                  ],
                },
              ],
            },
            {
              name: [
                "vSourceObjectId",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
            },
            {
              name: [
                "vTargetObjectId",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
            },
          ],
        },
        label: [
          "Utility - Copy Files - Subflow",
        ],
        interviewLabel: [
          "Utility - Copy Files - Subflow {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "452",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "Have_Record_Ids",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "57.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Add_to_Collection",
              ],
              label: [
                "Add to Collection",
              ],
              locationX: [
                "138",
              ],
              locationY: [
                "674",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "colContentDocumentLinksNew",
                  ],
                  operator: [
                    "Add",
                  ],
                  value: [
                    {
                      elementReference: [
                        "Content_Document_Links",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Content_Document_Links",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Content_Document_Links",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Content_Document_Links",
              },
            ],
            name: "Add_to_Collection",
            locationX: "138",
            locationY: "674",
          },
          {
            element: {
              name: [
                "Set_Create_Target_Error",
              ],
              label: [
                "Set Create Target Error",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "974",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "There was an error creating the Target Document Links",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Set_Create_Target_Error",
            locationX: "314",
            locationY: "974",
          },
          {
            element: {
              name: [
                "Set_Missing_Id_Error",
              ],
              label: [
                "Set Missing Id Error",
              ],
              locationX: [
                "842",
              ],
              locationY: [
                "242",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Either or both of the Source or Target record ids are blank.",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Set_Missing_Id_Error",
            locationX: "842",
            locationY: "242",
          },
          {
            element: {
              name: [
                "Set_No_Source_Error",
              ],
              label: [
                "Set No Source Error",
              ],
              locationX: [
                "578",
              ],
              locationY: [
                "458",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "There are no files attached to the Source record",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Set_No_Source_Error",
            locationX: "578",
            locationY: "458",
          },
          {
            element: {
              name: [
                "Set_Target_Link_Clear_Record_Id",
              ],
              label: [
                "Set Target Link & Clear Record Id",
              ],
              locationX: [
                "138",
              ],
              locationY: [
                "566",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "Content_Document_Links.LinkedEntityId",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vTargetObjectId",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "Content_Document_Links.Id",
                  ],
                  operator: [
                    "Assign",
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Add_to_Collection",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Add_to_Collection",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Add_to_Collection",
              },
            ],
            name: "Set_Target_Link_Clear_Record_Id",
            locationX: "138",
            locationY: "566",
          },
          {
            element: {
              name: [
                "Found_Source_Files",
              ],
              label: [
                "Found Source Files?",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "350",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Set_No_Source_Error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "NO SOURCE FILES (Default)",
              ],
              rules: [
                {
                  name: [
                    "HAVE_FILES",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Get_Source_Files",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Content_Document_Links",
                      ],
                    },
                  ],
                  label: [
                    "HAVE FILES",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Set_No_Source_Error",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Set_No_Source_Error",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Content_Document_Links",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "HAVE_FILES",
                childOf: "rules",
                reference: "Content_Document_Links",
              },
            ],
            name: "Found_Source_Files",
            locationX: "314",
            locationY: "350",
          },
          {
            element: {
              name: [
                "Have_Record_Ids",
              ],
              label: [
                "Have Record Ids?",
              ],
              locationX: [
                "578",
              ],
              locationY: [
                "134",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Set_Missing_Id_Error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "MISSING (Default)",
              ],
              rules: [
                {
                  name: [
                    "HAVE_BOTH",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "vSourceObjectId",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vTargetObjectId",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vSourceObjectId",
                      ],
                      operator: [
                        "NotEqualTo",
                      ],
                      rightValue: [
                        {
                          stringValue: [
                            "",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vTargetObjectId",
                      ],
                      operator: [
                        "NotEqualTo",
                      ],
                      rightValue: [
                        {
                          stringValue: [
                            "",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Get_Source_Files",
                      ],
                    },
                  ],
                  label: [
                    "HAVE BOTH",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Set_Missing_Id_Error",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Set_Missing_Id_Error",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Get_Source_Files",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "HAVE_BOTH",
                childOf: "rules",
                reference: "Get_Source_Files",
              },
            ],
            name: "Have_Record_Ids",
            locationX: "578",
            locationY: "134",
          },
          {
            element: "Copy all files/attachments from one record to another record.",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Utility - Copy Files - Subflow {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Utility - Copy Files - Subflow",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Content_Document_Links",
              ],
              label: [
                "Content Document Links",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "458",
              ],
              collectionReference: [
                "Get_Source_Files",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "Set_Target_Link_Clear_Record_Id",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "Create_Target_Content_Document_Links",
                  ],
                },
              ],
            },
            subtype: "loops",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Set_Target_Link_Clear_Record_Id",
                    ],
                  },
                ],
                processed: false,
                type: "nextValueConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Set_Target_Link_Clear_Record_Id",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Create_Target_Content_Document_Links",
                    ],
                  },
                ],
                processed: false,
                type: "noMoreValuesConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Create_Target_Content_Document_Links",
              },
            ],
            name: "Content_Document_Links",
            locationX: "50",
            locationY: "458",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Create_Target_Content_Document_Links",
              ],
              label: [
                "Create Target Content Document Links",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "866",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "Set_Create_Target_Error",
                  ],
                },
              ],
              inputReference: [
                "colContentDocumentLinksNew",
              ],
            },
            subtype: "recordCreates",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Set_Create_Target_Error",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Set_Create_Target_Error",
              },
            ],
            name: "Create_Target_Content_Document_Links",
            locationX: "50",
            locationY: "866",
          },
          {
            element: {
              name: [
                "Get_Source_Files",
              ],
              label: [
                "Get Source Files",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "242",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "Found_Source_Files",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "LinkedEntityId",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vSourceObjectId",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "IsDeleted",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "false",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "false",
              ],
              object: [
                "ContentDocumentLink",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordLookups",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Found_Source_Files",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Found_Source_Files",
              },
            ],
            name: "Get_Source_Files",
            locationX: "314",
            locationY: "242",
          },
          {
            element: "SystemModeWithoutSharing",
            subtype: "runInMode",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "452",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "Have_Record_Ids",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Have_Record_Ids",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Have_Record_Ids",
              },
            ],
            name: "flowstart",
            locationX: "452",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "colContentDocumentLinksNew",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "ContentDocumentLink",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "colContentDocumentLinksNew",
            dataType: "SObject",
          },
          {
            element: {
              name: [
                "vErrorMessage",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "true",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vErrorMessage",
            dataType: "String",
          },
          {
            element: {
              name: [
                "vIsError",
              ],
              dataType: [
                "Boolean",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "true",
              ],
              value: [
                {
                  booleanValue: [
                    "false",
                  ],
                },
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vIsError",
            dataType: "Boolean",
          },
          {
            element: {
              name: [
                "vSourceObjectId",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vSourceObjectId",
            dataType: "String",
          },
          {
            element: {
              name: [
                "vTargetObjectId",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vTargetObjectId",
            dataType: "String",
          },
        ],
        startReference: "Have_Record_Ids",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "Get_Source_Files",
                  ],
                  label: [
                    "Get Source Files",
                  ],
                  locationX: [
                    "314",
                  ],
                  locationY: [
                    "242",
                  ],
                  assignNullValuesIfNoRecordsFound: [
                    "false",
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Found_Source_Files",
                      ],
                    },
                  ],
                  filterLogic: [
                    "and",
                  ],
                  filters: [
                    {
                      field: [
                        "LinkedEntityId",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      value: [
                        {
                          elementReference: [
                            "vSourceObjectId",
                          ],
                        },
                      ],
                    },
                    {
                      field: [
                        "IsDeleted",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      value: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  getFirstRecordOnly: [
                    "false",
                  ],
                  object: [
                    "ContentDocumentLink",
                  ],
                  storeOutputAutomatically: [
                    "true",
                  ],
                },
                subtype: "recordLookups",
                metaType: "node",
                connectors: [
                  {
                    element: [
                      {
                        targetReference: [
                          "Found_Source_Files",
                        ],
                      },
                    ],
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "Found_Source_Files",
                  },
                ],
                name: "Get_Source_Files",
                locationX: "314",
                locationY: "242",
              },
              name: "Get_Source_Files",
              metaType: "node",
              type: "recordLookups",
              details: {
                locationX: "314",
                locationY: "242",
                connectsTo: [
                  "Found_Source_Files",
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Utility_Copy_Files_Advanced_Loops_Subflow.flow-meta.xml",
        name: "Utility_Copy_Files_Advanced_Loops_Subflow",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "57.0",
          ],
          assignments: [
            {
              name: [
                "Add_File_to_New_Target_Collection",
              ],
              label: [
                "Add File to New Target Collection",
              ],
              locationX: [
                "798",
              ],
              locationY: [
                "1490",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "colContentDocumentLinksCurrent",
                  ],
                  operator: [
                    "Add",
                  ],
                  value: [
                    {
                      elementReference: [
                        "Each_Source_File",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Each_Source_File",
                  ],
                },
              ],
            },
            {
              name: [
                "Add_to_Collection",
              ],
              label: [
                "Add to Collection",
              ],
              locationX: [
                "138",
              ],
              locationY: [
                "2174",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "colContentDocumentLinksNew",
                  ],
                  operator: [
                    "Add",
                  ],
                  value: [
                    {
                      elementReference: [
                        "Content_Document_Links",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Content_Document_Links",
                  ],
                },
              ],
            },
            {
              name: [
                "Assign_Entire_Source_File_Collection_to_Target",
              ],
              label: [
                "Assign Entire Source File Collection to Target",
              ],
              locationX: [
                "358",
              ],
              locationY: [
                "674",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "colContentDocumentLinksCurrent",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "Get_Source_Files",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Any_New_files_to_Copy",
                  ],
                },
              ],
            },
            {
              name: [
                "Clear_Match_Flag",
              ],
              label: [
                "Clear Match Flag",
              ],
              locationX: [
                "710",
              ],
              locationY: [
                "782",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vMatch",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "false",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Each_Target_File",
                  ],
                },
              ],
            },
            {
              name: [
                "Set_Create_Target_Error",
              ],
              label: [
                "Set Create Target Error",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "2474",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "There was an error creating the Target Document Links",
                      ],
                    },
                  ],
                },
              ],
            },
            {
              name: [
                "Set_Match_Flag",
              ],
              label: [
                "Set Match Flag",
              ],
              locationX: [
                "798",
              ],
              locationY: [
                "1106",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vMatch",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Each_Target_File",
                  ],
                },
              ],
            },
            {
              name: [
                "Set_Missing_Id_Error",
              ],
              label: [
                "Set Missing Id Error",
              ],
              locationX: [
                "1106",
              ],
              locationY: [
                "242",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Either or both of the Source or Target record ids are blank.",
                      ],
                    },
                  ],
                },
              ],
            },
            {
              name: [
                "Set_No_Source_Error",
              ],
              label: [
                "Set No Source Error",
              ],
              locationX: [
                "842",
              ],
              locationY: [
                "458",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "There are no files attached to the Source record",
                      ],
                    },
                  ],
                },
              ],
            },
            {
              name: [
                "Set_Target_Link_Clear_Record_Id",
              ],
              label: [
                "Set Target Link & Clear Record Id",
              ],
              locationX: [
                "138",
              ],
              locationY: [
                "2066",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "Content_Document_Links.LinkedEntityId",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vTargetObjectId",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "Content_Document_Links.Id",
                  ],
                  operator: [
                    "Assign",
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Add_to_Collection",
                  ],
                },
              ],
            },
          ],
          decisions: [
            {
              name: [
                "Any_New_files_to_Copy",
              ],
              label: [
                "Any New files to Copy?",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "1850",
              ],
              defaultConnectorLabel: [
                "NO NEW FILES (Default)",
              ],
              rules: [
                {
                  name: [
                    "COPY_FILES",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "colContentDocumentLinksCurrent",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Content_Document_Links",
                      ],
                    },
                  ],
                  label: [
                    "COPY FILES",
                  ],
                },
              ],
            },
            {
              name: [
                "Compare_LinkedEntityId_Values",
              ],
              label: [
                "Compare LinkedEntityId Values",
              ],
              locationX: [
                "930",
              ],
              locationY: [
                "998",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Each_Target_File",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "No Match (Default)",
              ],
              rules: [
                {
                  name: [
                    "Source_File_found_in_Target_Files",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Each_Source_File.LinkedEntityId",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      rightValue: [
                        {
                          elementReference: [
                            "Each_Target_File.LinkedEntityId",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Set_Match_Flag",
                      ],
                    },
                  ],
                  label: [
                    "Source File found in Target Files",
                  ],
                },
              ],
            },
            {
              name: [
                "Found_Source_Files",
              ],
              label: [
                "Found Source Files?",
              ],
              locationX: [
                "578",
              ],
              locationY: [
                "350",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Set_No_Source_Error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "NO SOURCE FILES (Default)",
              ],
              rules: [
                {
                  name: [
                    "HAVE_FILES",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Get_Source_Files",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Get_Current_Target_Files",
                      ],
                    },
                  ],
                  label: [
                    "HAVE FILES",
                  ],
                },
              ],
            },
            {
              name: [
                "Found_Target_Files",
              ],
              label: [
                "Found Target Files?",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "566",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Assign_Entire_Source_File_Collection_to_Target",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "NO TARGET FILES (Default)",
              ],
              rules: [
                {
                  name: [
                    "FOUND_EXISTING_FILES",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Get_Current_Target_Files",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Each_Source_File",
                      ],
                    },
                  ],
                  label: [
                    "FOUND EXISTING FILES",
                  ],
                },
              ],
            },
            {
              name: [
                "Have_Record_Ids",
              ],
              label: [
                "Have Record Ids?",
              ],
              locationX: [
                "842",
              ],
              locationY: [
                "134",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Set_Missing_Id_Error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "MISSING (Default)",
              ],
              rules: [
                {
                  name: [
                    "HAVE_BOTH",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "vSourceObjectId",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vTargetObjectId",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vSourceObjectId",
                      ],
                      operator: [
                        "NotEqualTo",
                      ],
                      rightValue: [
                        {
                          stringValue: [
                            "",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vTargetObjectId",
                      ],
                      operator: [
                        "NotEqualTo",
                      ],
                      rightValue: [
                        {
                          stringValue: [
                            "",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Get_Source_Files",
                      ],
                    },
                  ],
                  label: [
                    "HAVE BOTH",
                  ],
                },
              ],
            },
            {
              name: [
                "Was_There_a_Match",
              ],
              label: [
                "Was There a Match?",
              ],
              locationX: [
                "710",
              ],
              locationY: [
                "1382",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Add_File_to_New_Target_Collection",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "NO MATCH (Default)",
              ],
              rules: [
                {
                  name: [
                    "MATCH",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "vMatch",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "true",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Each_Source_File",
                      ],
                    },
                  ],
                  label: [
                    "MATCH",
                  ],
                },
              ],
            },
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Utility - Copy Files Advanced (Loops) - Subflow {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Utility - Copy Files Advanced (Loops) - Subflow",
          ],
          loops: [
            {
              name: [
                "Content_Document_Links",
              ],
              label: [
                "Content Document Links",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "1958",
              ],
              collectionReference: [
                "colContentDocumentLinksCurrent",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "Set_Target_Link_Clear_Record_Id",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "Create_Target_Content_Document_Links",
                  ],
                },
              ],
            },
            {
              name: [
                "Each_Source_File",
              ],
              label: [
                "Each Source File",
              ],
              locationX: [
                "270",
              ],
              locationY: [
                "674",
              ],
              collectionReference: [
                "Get_Source_Files",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "Clear_Match_Flag",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "Any_New_files_to_Copy",
                  ],
                },
              ],
            },
            {
              name: [
                "Each_Target_File",
              ],
              label: [
                "Each Target File",
              ],
              locationX: [
                "710",
              ],
              locationY: [
                "890",
              ],
              collectionReference: [
                "Get_Current_Target_Files",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "Compare_LinkedEntityId_Values",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "Was_There_a_Match",
                  ],
                },
              ],
            },
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordCreates: [
            {
              name: [
                "Create_Target_Content_Document_Links",
              ],
              label: [
                "Create Target Content Document Links",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "2366",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "Set_Create_Target_Error",
                  ],
                },
              ],
              inputReference: [
                "colContentDocumentLinksNew",
              ],
            },
          ],
          recordLookups: [
            {
              name: [
                "Get_Current_Target_Files",
              ],
              label: [
                "Get Current Target Files",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "458",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "Found_Target_Files",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "LinkedEntityId",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vTargetObjectId",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "IsDeleted",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "false",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "false",
              ],
              object: [
                "ContentDocumentLink",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            {
              name: [
                "Get_Source_Files",
              ],
              label: [
                "Get Source Files",
              ],
              locationX: [
                "578",
              ],
              locationY: [
                "242",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "Found_Source_Files",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "LinkedEntityId",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vSourceObjectId",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "IsDeleted",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "false",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "false",
              ],
              object: [
                "ContentDocumentLink",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          runInMode: [
            "SystemModeWithoutSharing",
          ],
          start: [
            {
              locationX: [
                "716",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "Have_Record_Ids",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "colContentDocumentLinksCurrent",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "ContentDocumentLink",
              ],
            },
            {
              name: [
                "colContentDocumentLinksNew",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "ContentDocumentLink",
              ],
            },
            {
              name: [
                "vErrorMessage",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "true",
              ],
            },
            {
              name: [
                "vIsError",
              ],
              dataType: [
                "Boolean",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "true",
              ],
              value: [
                {
                  booleanValue: [
                    "false",
                  ],
                },
              ],
            },
            {
              name: [
                "vMatch",
              ],
              dataType: [
                "Boolean",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  booleanValue: [
                    "false",
                  ],
                },
              ],
            },
            {
              name: [
                "vSourceObjectId",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
            },
            {
              name: [
                "vTargetObjectId",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
            },
          ],
        },
        label: [
          "Utility - Copy Files Advanced (Loops) - Subflow",
        ],
        interviewLabel: [
          "Utility - Copy Files Advanced (Loops) - Subflow {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "716",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "Have_Record_Ids",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "57.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Add_File_to_New_Target_Collection",
              ],
              label: [
                "Add File to New Target Collection",
              ],
              locationX: [
                "798",
              ],
              locationY: [
                "1490",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "colContentDocumentLinksCurrent",
                  ],
                  operator: [
                    "Add",
                  ],
                  value: [
                    {
                      elementReference: [
                        "Each_Source_File",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Each_Source_File",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Each_Source_File",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Each_Source_File",
              },
            ],
            name: "Add_File_to_New_Target_Collection",
            locationX: "798",
            locationY: "1490",
          },
          {
            element: {
              name: [
                "Add_to_Collection",
              ],
              label: [
                "Add to Collection",
              ],
              locationX: [
                "138",
              ],
              locationY: [
                "2174",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "colContentDocumentLinksNew",
                  ],
                  operator: [
                    "Add",
                  ],
                  value: [
                    {
                      elementReference: [
                        "Content_Document_Links",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Content_Document_Links",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Content_Document_Links",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Content_Document_Links",
              },
            ],
            name: "Add_to_Collection",
            locationX: "138",
            locationY: "2174",
          },
          {
            element: {
              name: [
                "Assign_Entire_Source_File_Collection_to_Target",
              ],
              label: [
                "Assign Entire Source File Collection to Target",
              ],
              locationX: [
                "358",
              ],
              locationY: [
                "674",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "colContentDocumentLinksCurrent",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "Get_Source_Files",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Any_New_files_to_Copy",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Any_New_files_to_Copy",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Any_New_files_to_Copy",
              },
            ],
            name: "Assign_Entire_Source_File_Collection_to_Target",
            locationX: "358",
            locationY: "674",
          },
          {
            element: {
              name: [
                "Clear_Match_Flag",
              ],
              label: [
                "Clear Match Flag",
              ],
              locationX: [
                "710",
              ],
              locationY: [
                "782",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vMatch",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "false",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Each_Target_File",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Each_Target_File",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Each_Target_File",
              },
            ],
            name: "Clear_Match_Flag",
            locationX: "710",
            locationY: "782",
          },
          {
            element: {
              name: [
                "Set_Create_Target_Error",
              ],
              label: [
                "Set Create Target Error",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "2474",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "There was an error creating the Target Document Links",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Set_Create_Target_Error",
            locationX: "314",
            locationY: "2474",
          },
          {
            element: {
              name: [
                "Set_Match_Flag",
              ],
              label: [
                "Set Match Flag",
              ],
              locationX: [
                "798",
              ],
              locationY: [
                "1106",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vMatch",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Each_Target_File",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Each_Target_File",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Each_Target_File",
              },
            ],
            name: "Set_Match_Flag",
            locationX: "798",
            locationY: "1106",
          },
          {
            element: {
              name: [
                "Set_Missing_Id_Error",
              ],
              label: [
                "Set Missing Id Error",
              ],
              locationX: [
                "1106",
              ],
              locationY: [
                "242",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Either or both of the Source or Target record ids are blank.",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Set_Missing_Id_Error",
            locationX: "1106",
            locationY: "242",
          },
          {
            element: {
              name: [
                "Set_No_Source_Error",
              ],
              label: [
                "Set No Source Error",
              ],
              locationX: [
                "842",
              ],
              locationY: [
                "458",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "vIsError",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "true",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "vErrorMessage",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "There are no files attached to the Source record",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Set_No_Source_Error",
            locationX: "842",
            locationY: "458",
          },
          {
            element: {
              name: [
                "Set_Target_Link_Clear_Record_Id",
              ],
              label: [
                "Set Target Link & Clear Record Id",
              ],
              locationX: [
                "138",
              ],
              locationY: [
                "2066",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "Content_Document_Links.LinkedEntityId",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vTargetObjectId",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "Content_Document_Links.Id",
                  ],
                  operator: [
                    "Assign",
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "Add_to_Collection",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Add_to_Collection",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Add_to_Collection",
              },
            ],
            name: "Set_Target_Link_Clear_Record_Id",
            locationX: "138",
            locationY: "2066",
          },
          {
            element: {
              name: [
                "Any_New_files_to_Copy",
              ],
              label: [
                "Any New files to Copy?",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "1850",
              ],
              defaultConnectorLabel: [
                "NO NEW FILES (Default)",
              ],
              rules: [
                {
                  name: [
                    "COPY_FILES",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "colContentDocumentLinksCurrent",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Content_Document_Links",
                      ],
                    },
                  ],
                  label: [
                    "COPY FILES",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
              },
              {
                element: [
                  {
                    targetReference: [
                      "Content_Document_Links",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "COPY_FILES",
                childOf: "rules",
                reference: "Content_Document_Links",
              },
            ],
            name: "Any_New_files_to_Copy",
            locationX: "314",
            locationY: "1850",
          },
          {
            element: {
              name: [
                "Compare_LinkedEntityId_Values",
              ],
              label: [
                "Compare LinkedEntityId Values",
              ],
              locationX: [
                "930",
              ],
              locationY: [
                "998",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Each_Target_File",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "No Match (Default)",
              ],
              rules: [
                {
                  name: [
                    "Source_File_found_in_Target_Files",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Each_Source_File.LinkedEntityId",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      rightValue: [
                        {
                          elementReference: [
                            "Each_Target_File.LinkedEntityId",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Set_Match_Flag",
                      ],
                    },
                  ],
                  label: [
                    "Source File found in Target Files",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Each_Target_File",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Each_Target_File",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Set_Match_Flag",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "Source_File_found_in_Target_Files",
                childOf: "rules",
                reference: "Set_Match_Flag",
              },
            ],
            name: "Compare_LinkedEntityId_Values",
            locationX: "930",
            locationY: "998",
          },
          {
            element: {
              name: [
                "Found_Source_Files",
              ],
              label: [
                "Found Source Files?",
              ],
              locationX: [
                "578",
              ],
              locationY: [
                "350",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Set_No_Source_Error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "NO SOURCE FILES (Default)",
              ],
              rules: [
                {
                  name: [
                    "HAVE_FILES",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Get_Source_Files",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Get_Current_Target_Files",
                      ],
                    },
                  ],
                  label: [
                    "HAVE FILES",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Set_No_Source_Error",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Set_No_Source_Error",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Get_Current_Target_Files",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "HAVE_FILES",
                childOf: "rules",
                reference: "Get_Current_Target_Files",
              },
            ],
            name: "Found_Source_Files",
            locationX: "578",
            locationY: "350",
          },
          {
            element: {
              name: [
                "Found_Target_Files",
              ],
              label: [
                "Found Target Files?",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "566",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Assign_Entire_Source_File_Collection_to_Target",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "NO TARGET FILES (Default)",
              ],
              rules: [
                {
                  name: [
                    "FOUND_EXISTING_FILES",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Get_Current_Target_Files",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Each_Source_File",
                      ],
                    },
                  ],
                  label: [
                    "FOUND EXISTING FILES",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Assign_Entire_Source_File_Collection_to_Target",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Assign_Entire_Source_File_Collection_to_Target",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Each_Source_File",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "FOUND_EXISTING_FILES",
                childOf: "rules",
                reference: "Each_Source_File",
              },
            ],
            name: "Found_Target_Files",
            locationX: "314",
            locationY: "566",
          },
          {
            element: {
              name: [
                "Have_Record_Ids",
              ],
              label: [
                "Have Record Ids?",
              ],
              locationX: [
                "842",
              ],
              locationY: [
                "134",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Set_Missing_Id_Error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "MISSING (Default)",
              ],
              rules: [
                {
                  name: [
                    "HAVE_BOTH",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "vSourceObjectId",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vTargetObjectId",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vSourceObjectId",
                      ],
                      operator: [
                        "NotEqualTo",
                      ],
                      rightValue: [
                        {
                          stringValue: [
                            "",
                          ],
                        },
                      ],
                    },
                    {
                      leftValueReference: [
                        "vTargetObjectId",
                      ],
                      operator: [
                        "NotEqualTo",
                      ],
                      rightValue: [
                        {
                          stringValue: [
                            "",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Get_Source_Files",
                      ],
                    },
                  ],
                  label: [
                    "HAVE BOTH",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Set_Missing_Id_Error",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Set_Missing_Id_Error",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Get_Source_Files",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "HAVE_BOTH",
                childOf: "rules",
                reference: "Get_Source_Files",
              },
            ],
            name: "Have_Record_Ids",
            locationX: "842",
            locationY: "134",
          },
          {
            element: {
              name: [
                "Was_There_a_Match",
              ],
              label: [
                "Was There a Match?",
              ],
              locationX: [
                "710",
              ],
              locationY: [
                "1382",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "Add_File_to_New_Target_Collection",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "NO MATCH (Default)",
              ],
              rules: [
                {
                  name: [
                    "MATCH",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "vMatch",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "true",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Each_Source_File",
                      ],
                    },
                  ],
                  label: [
                    "MATCH",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Add_File_to_New_Target_Collection",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Add_File_to_New_Target_Collection",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Each_Source_File",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "MATCH",
                childOf: "rules",
                reference: "Each_Source_File",
              },
            ],
            name: "Was_There_a_Match",
            locationX: "710",
            locationY: "1382",
          },
          {
            element: "Utility - Copy Files Advanced (Loops) - Subflow {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Utility - Copy Files Advanced (Loops) - Subflow",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Content_Document_Links",
              ],
              label: [
                "Content Document Links",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "1958",
              ],
              collectionReference: [
                "colContentDocumentLinksCurrent",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "Set_Target_Link_Clear_Record_Id",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "Create_Target_Content_Document_Links",
                  ],
                },
              ],
            },
            subtype: "loops",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Set_Target_Link_Clear_Record_Id",
                    ],
                  },
                ],
                processed: false,
                type: "nextValueConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Set_Target_Link_Clear_Record_Id",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Create_Target_Content_Document_Links",
                    ],
                  },
                ],
                processed: false,
                type: "noMoreValuesConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Create_Target_Content_Document_Links",
              },
            ],
            name: "Content_Document_Links",
            locationX: "50",
            locationY: "1958",
          },
          {
            element: {
              name: [
                "Each_Source_File",
              ],
              label: [
                "Each Source File",
              ],
              locationX: [
                "270",
              ],
              locationY: [
                "674",
              ],
              collectionReference: [
                "Get_Source_Files",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "Clear_Match_Flag",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "Any_New_files_to_Copy",
                  ],
                },
              ],
            },
            subtype: "loops",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Clear_Match_Flag",
                    ],
                  },
                ],
                processed: false,
                type: "nextValueConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Clear_Match_Flag",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Any_New_files_to_Copy",
                    ],
                  },
                ],
                processed: false,
                type: "noMoreValuesConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Any_New_files_to_Copy",
              },
            ],
            name: "Each_Source_File",
            locationX: "270",
            locationY: "674",
          },
          {
            element: {
              name: [
                "Each_Target_File",
              ],
              label: [
                "Each Target File",
              ],
              locationX: [
                "710",
              ],
              locationY: [
                "890",
              ],
              collectionReference: [
                "Get_Current_Target_Files",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "Compare_LinkedEntityId_Values",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "Was_There_a_Match",
                  ],
                },
              ],
            },
            subtype: "loops",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Compare_LinkedEntityId_Values",
                    ],
                  },
                ],
                processed: false,
                type: "nextValueConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Compare_LinkedEntityId_Values",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Was_There_a_Match",
                    ],
                  },
                ],
                processed: false,
                type: "noMoreValuesConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Was_There_a_Match",
              },
            ],
            name: "Each_Target_File",
            locationX: "710",
            locationY: "890",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Create_Target_Content_Document_Links",
              ],
              label: [
                "Create Target Content Document Links",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "2366",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "Set_Create_Target_Error",
                  ],
                },
              ],
              inputReference: [
                "colContentDocumentLinksNew",
              ],
            },
            subtype: "recordCreates",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Set_Create_Target_Error",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "Set_Create_Target_Error",
              },
            ],
            name: "Create_Target_Content_Document_Links",
            locationX: "50",
            locationY: "2366",
          },
          {
            element: {
              name: [
                "Get_Current_Target_Files",
              ],
              label: [
                "Get Current Target Files",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "458",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "Found_Target_Files",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "LinkedEntityId",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vTargetObjectId",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "IsDeleted",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "false",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "false",
              ],
              object: [
                "ContentDocumentLink",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordLookups",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Found_Target_Files",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Found_Target_Files",
              },
            ],
            name: "Get_Current_Target_Files",
            locationX: "314",
            locationY: "458",
          },
          {
            element: {
              name: [
                "Get_Source_Files",
              ],
              label: [
                "Get Source Files",
              ],
              locationX: [
                "578",
              ],
              locationY: [
                "242",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "Found_Source_Files",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "LinkedEntityId",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      elementReference: [
                        "vSourceObjectId",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "IsDeleted",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      booleanValue: [
                        "false",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "false",
              ],
              object: [
                "ContentDocumentLink",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordLookups",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Found_Source_Files",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Found_Source_Files",
              },
            ],
            name: "Get_Source_Files",
            locationX: "578",
            locationY: "242",
          },
          {
            element: "SystemModeWithoutSharing",
            subtype: "runInMode",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "716",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "Have_Record_Ids",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Have_Record_Ids",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Have_Record_Ids",
              },
            ],
            name: "flowstart",
            locationX: "716",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "colContentDocumentLinksCurrent",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "ContentDocumentLink",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "colContentDocumentLinksCurrent",
            dataType: "SObject",
          },
          {
            element: {
              name: [
                "colContentDocumentLinksNew",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "ContentDocumentLink",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "colContentDocumentLinksNew",
            dataType: "SObject",
          },
          {
            element: {
              name: [
                "vErrorMessage",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "true",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vErrorMessage",
            dataType: "String",
          },
          {
            element: {
              name: [
                "vIsError",
              ],
              dataType: [
                "Boolean",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "true",
              ],
              value: [
                {
                  booleanValue: [
                    "false",
                  ],
                },
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vIsError",
            dataType: "Boolean",
          },
          {
            element: {
              name: [
                "vMatch",
              ],
              dataType: [
                "Boolean",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  booleanValue: [
                    "false",
                  ],
                },
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vMatch",
            dataType: "Boolean",
          },
          {
            element: {
              name: [
                "vSourceObjectId",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vSourceObjectId",
            dataType: "String",
          },
          {
            element: {
              name: [
                "vTargetObjectId",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "vTargetObjectId",
            dataType: "String",
          },
        ],
        startReference: "Have_Record_Ids",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                metaType: "attribute",
                name: "undefined",
                subtype: "description",
                expression: "!==null",
              },
              name: "undefined",
              metaType: "attribute",
              type: "description",
              details: {
                expression: "!==null",
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "Get_Source_Files",
                  ],
                  label: [
                    "Get Source Files",
                  ],
                  locationX: [
                    "578",
                  ],
                  locationY: [
                    "242",
                  ],
                  assignNullValuesIfNoRecordsFound: [
                    "false",
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Found_Source_Files",
                      ],
                    },
                  ],
                  filterLogic: [
                    "and",
                  ],
                  filters: [
                    {
                      field: [
                        "LinkedEntityId",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      value: [
                        {
                          elementReference: [
                            "vSourceObjectId",
                          ],
                        },
                      ],
                    },
                    {
                      field: [
                        "IsDeleted",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      value: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  getFirstRecordOnly: [
                    "false",
                  ],
                  object: [
                    "ContentDocumentLink",
                  ],
                  storeOutputAutomatically: [
                    "true",
                  ],
                },
                subtype: "recordLookups",
                metaType: "node",
                connectors: [
                  {
                    element: [
                      {
                        targetReference: [
                          "Found_Source_Files",
                        ],
                      },
                    ],
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "Found_Source_Files",
                  },
                ],
                name: "Get_Source_Files",
                locationX: "578",
                locationY: "242",
              },
              name: "Get_Source_Files",
              metaType: "node",
              type: "recordLookups",
              details: {
                locationX: "578",
                locationY: "242",
                connectsTo: [
                  "Found_Source_Files",
                ],
              },
            },
            {
              violation: {
                element: {
                  name: [
                    "Get_Current_Target_Files",
                  ],
                  label: [
                    "Get Current Target Files",
                  ],
                  locationX: [
                    "314",
                  ],
                  locationY: [
                    "458",
                  ],
                  assignNullValuesIfNoRecordsFound: [
                    "false",
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Found_Target_Files",
                      ],
                    },
                  ],
                  filterLogic: [
                    "and",
                  ],
                  filters: [
                    {
                      field: [
                        "LinkedEntityId",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      value: [
                        {
                          elementReference: [
                            "vTargetObjectId",
                          ],
                        },
                      ],
                    },
                    {
                      field: [
                        "IsDeleted",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      value: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  getFirstRecordOnly: [
                    "false",
                  ],
                  object: [
                    "ContentDocumentLink",
                  ],
                  storeOutputAutomatically: [
                    "true",
                  ],
                },
                subtype: "recordLookups",
                metaType: "node",
                connectors: [
                  {
                    element: [
                      {
                        targetReference: [
                          "Found_Target_Files",
                        ],
                      },
                    ],
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "Found_Target_Files",
                  },
                ],
                name: "Get_Current_Target_Files",
                locationX: "314",
                locationY: "458",
              },
              name: "Get_Current_Target_Files",
              metaType: "node",
              type: "recordLookups",
              details: {
                locationX: "314",
                locationY: "458",
                connectsTo: [
                  "Found_Target_Files",
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Unused_Variable_Fixed.flow-meta.xml",
        name: "Unused_Variable_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Unused Variable\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Fix: Unused Variables {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Unused Variable",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "Flow",
          ],
          screens: [
            {
              name: [
                "mock_screen",
              ],
              label: [
                "mock screen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Fix: Unused Variable",
        ],
        interviewLabel: [
          "Fix: Unused Variables {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "Flow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "mock_screen",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "Flow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Unused Variable\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Fix: Unused Variables {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Unused Variable",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "Flow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "mock_screen",
              ],
              label: [
                "mock screen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "mock_screen",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mock_screen",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mock_screen",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "mock_screen",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Unused_Variable.flow-meta.xml",
        name: "Unused_Variable",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates a violation of the rule \"Unused Variable\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Unused Variable {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Unused Variable",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "Flow",
          ],
          screens: [
            {
              name: [
                "mock_screen",
              ],
              label: [
                "mock screen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "anUnusedVariable",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  stringValue: [
                    "hello world",
                  ],
                },
              ],
            },
          ],
        },
        label: [
          "Unused Variable",
        ],
        interviewLabel: [
          "Unused Variable {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "Flow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "mock_screen",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "Flow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates a violation of the rule \"Unused Variable\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Unused Variable {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Unused Variable",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "Flow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "mock_screen",
              ],
              label: [
                "mock screen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "mock_screen",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mock_screen",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mock_screen",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "anUnusedVariable",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  stringValue: [
                    "hello world",
                  ],
                },
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "anUnusedVariable",
            dataType: "String",
          },
        ],
        startReference: "mock_screen",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "anUnusedVariable",
                  ],
                  dataType: [
                    "String",
                  ],
                  isCollection: [
                    "false",
                  ],
                  isInput: [
                    "false",
                  ],
                  isOutput: [
                    "false",
                  ],
                  value: [
                    {
                      stringValue: [
                        "hello world",
                      ],
                    },
                  ],
                },
                subtype: "variables",
                metaType: "variable",
                name: "anUnusedVariable",
                dataType: "String",
              },
              name: "anUnusedVariable",
              metaType: "variable",
              type: "variables",
              details: {
                dataType: "String",
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: true,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Unconnected_Element_Fixed.flow-meta.xml",
        name: "Unconnected_Element_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          assignments: [
            {
              description: [
                "example assignment",
              ],
              name: [
                "getCurrentTime",
              ],
              label: [
                "getCurrentTime",
              ],
              locationX: [
                "656",
              ],
              locationY: [
                "182",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "currentTime",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$Flow.CurrentDateTime",
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Unconnected Element\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Unconnected Element Fixed {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Unconnected Element",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "FREE_FORM_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          start: [
            {
              locationX: [
                "530",
              ],
              locationY: [
                "48",
              ],
              connector: [
                {
                  targetReference: [
                    "getCurrentTime",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "currentTime",
              ],
              dataType: [
                "DateTime",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  elementReference: [
                    "$Flow.CurrentDateTime",
                  ],
                },
              ],
            },
          ],
        },
        label: [
          "Fix: Unconnected Element",
        ],
        interviewLabel: [
          "Unconnected Element Fixed {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "FREE_FORM_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "530",
            ],
            locationY: [
              "48",
            ],
            connector: [
              {
                targetReference: [
                  "getCurrentTime",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "example assignment",
              ],
              name: [
                "getCurrentTime",
              ],
              label: [
                "getCurrentTime",
              ],
              locationX: [
                "656",
              ],
              locationY: [
                "182",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "currentTime",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$Flow.CurrentDateTime",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "getCurrentTime",
            locationX: "656",
            locationY: "182",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Unconnected Element\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Unconnected Element Fixed {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Unconnected Element",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "FREE_FORM_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "530",
              ],
              locationY: [
                "48",
              ],
              connector: [
                {
                  targetReference: [
                    "getCurrentTime",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "getCurrentTime",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "getCurrentTime",
              },
            ],
            name: "flowstart",
            locationX: "530",
            locationY: "48",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "currentTime",
              ],
              dataType: [
                "DateTime",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  elementReference: [
                    "$Flow.CurrentDateTime",
                  ],
                },
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "currentTime",
            dataType: "DateTime",
          },
        ],
        startReference: "getCurrentTime",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                metaType: "attribute",
                name: "FREE_FORM_CANVAS",
                subtype: "CanvasMode",
                expression: "!== AUTO_LAYOUT_CANVAS",
              },
              name: "FREE_FORM_CANVAS",
              metaType: "attribute",
              type: "CanvasMode",
              details: {
                expression: "!== AUTO_LAYOUT_CANVAS",
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Unconnected_Element.flow-meta.xml",
        name: "Unconnected_Element",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          assignments: [
            {
              description: [
                "example assignment",
              ],
              name: [
                "getCurrentTime",
              ],
              label: [
                "getCurrentTime",
              ],
              locationX: [
                "656",
              ],
              locationY: [
                "182",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "currentTime",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$Flow.CurrentDateTime",
                      ],
                    },
                  ],
                },
              ],
            },
            {
              description: [
                "example assignment (unused)",
              ],
              name: [
                "unused_assignment",
              ],
              label: [
                "unused assignment",
              ],
              locationX: [
                "835",
              ],
              locationY: [
                "177",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "currentTime",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$Flow.InterviewStartTime",
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates a violation of the rule \"Unconnected Element\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Unconnected Element {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Unconnected Element",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "FREE_FORM_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          start: [
            {
              locationX: [
                "530",
              ],
              locationY: [
                "48",
              ],
              connector: [
                {
                  targetReference: [
                    "getCurrentTime",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "currentTime",
              ],
              dataType: [
                "DateTime",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  elementReference: [
                    "$Flow.CurrentDateTime",
                  ],
                },
              ],
            },
          ],
        },
        label: [
          "Unconnected Element",
        ],
        interviewLabel: [
          "Unconnected Element {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "FREE_FORM_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "530",
            ],
            locationY: [
              "48",
            ],
            connector: [
              {
                targetReference: [
                  "getCurrentTime",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "example assignment",
              ],
              name: [
                "getCurrentTime",
              ],
              label: [
                "getCurrentTime",
              ],
              locationX: [
                "656",
              ],
              locationY: [
                "182",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "currentTime",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$Flow.CurrentDateTime",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "getCurrentTime",
            locationX: "656",
            locationY: "182",
          },
          {
            element: {
              description: [
                "example assignment (unused)",
              ],
              name: [
                "unused_assignment",
              ],
              label: [
                "unused assignment",
              ],
              locationX: [
                "835",
              ],
              locationY: [
                "177",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "currentTime",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$Flow.InterviewStartTime",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "unused_assignment",
            locationX: "835",
            locationY: "177",
          },
          {
            element: "This flow demonstrates a violation of the rule \"Unconnected Element\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Unconnected Element {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Unconnected Element",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "FREE_FORM_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "530",
              ],
              locationY: [
                "48",
              ],
              connector: [
                {
                  targetReference: [
                    "getCurrentTime",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "getCurrentTime",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "getCurrentTime",
              },
            ],
            name: "flowstart",
            locationX: "530",
            locationY: "48",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "currentTime",
              ],
              dataType: [
                "DateTime",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  elementReference: [
                    "$Flow.CurrentDateTime",
                  ],
                },
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "currentTime",
            dataType: "DateTime",
          },
        ],
        startReference: "getCurrentTime",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                metaType: "attribute",
                name: "FREE_FORM_CANVAS",
                subtype: "CanvasMode",
                expression: "!== AUTO_LAYOUT_CANVAS",
              },
              name: "FREE_FORM_CANVAS",
              metaType: "attribute",
              type: "CanvasMode",
              details: {
                expression: "!== AUTO_LAYOUT_CANVAS",
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  description: [
                    "example assignment (unused)",
                  ],
                  name: [
                    "unused_assignment",
                  ],
                  label: [
                    "unused assignment",
                  ],
                  locationX: [
                    "835",
                  ],
                  locationY: [
                    "177",
                  ],
                  assignmentItems: [
                    {
                      assignToReference: [
                        "currentTime",
                      ],
                      operator: [
                        "Assign",
                      ],
                      value: [
                        {
                          elementReference: [
                            "$Flow.InterviewStartTime",
                          ],
                        },
                      ],
                    },
                  ],
                },
                subtype: "assignments",
                metaType: "node",
                connectors: [
                  {
                    element: undefined,
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                  },
                ],
                name: "unused_assignment",
                locationX: "835",
                locationY: "177",
              },
              name: "unused_assignment",
              metaType: "node",
              type: "assignments",
              details: {
                locationX: "835",
                locationY: "177",
                connectsTo: [
                  undefined,
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/SOQL_Query_In_A_Loop_Fixed.flow-meta.xml",
        name: "SOQL_Query_In_A_Loop_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "dosomethingelse",
              ],
              label: [
                "dosomethingelse",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "434",
              ],
              actionName: [
                "NewCase",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              nameSegment: [
                "NewCase",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          decisions: [
            {
              name: [
                "notnull",
              ],
              label: [
                "notnull",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "434",
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "notnulln",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "SOQL_Query_Example",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  label: [
                    "notnull",
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"SOQL Query In A Loop\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Fix: SOQL Query In A Loop {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: SOQL Query In A Loop",
          ],
          loops: [
            {
              description: [
                "an example loop",
              ],
              name: [
                "aLoop",
              ],
              label: [
                "aLoop",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              collectionReference: [
                "Accounts",
              ],
              iterationOrder: [
                "Asc",
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "SOQL_Query_Example",
                  ],
                },
              ],
            },
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordLookups: [
            {
              name: [
                "SOQL_Query_Example",
              ],
              label: [
                "SOQL Query Example",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "326",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "notnull",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "dosomethingelse",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Industry",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "None",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "true",
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              description: [
                "A collection of Accounts",
              ],
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "true",
              ],
              objectType: [
                "Account",
              ],
            },
          ],
        },
        label: [
          "Fix: SOQL Query In A Loop",
        ],
        interviewLabel: [
          "Fix: SOQL Query In A Loop {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "aLoop",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "dosomethingelse",
              ],
              label: [
                "dosomethingelse",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "434",
              ],
              actionName: [
                "NewCase",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              nameSegment: [
                "NewCase",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "dosomethingelse",
            locationX: "440",
            locationY: "434",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "notnull",
              ],
              label: [
                "notnull",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "434",
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "notnulln",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "SOQL_Query_Example",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  label: [
                    "notnull",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "notnull",
            locationX: "176",
            locationY: "434",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"SOQL Query In A Loop\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Fix: SOQL Query In A Loop {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: SOQL Query In A Loop",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "an example loop",
              ],
              name: [
                "aLoop",
              ],
              label: [
                "aLoop",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              collectionReference: [
                "Accounts",
              ],
              iterationOrder: [
                "Asc",
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "SOQL_Query_Example",
                  ],
                },
              ],
            },
            subtype: "loops",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "nextValueConnector",
                childName: undefined,
                childOf: undefined,
              },
              {
                element: [
                  {
                    targetReference: [
                      "SOQL_Query_Example",
                    ],
                  },
                ],
                processed: false,
                type: "noMoreValuesConnector",
                childName: undefined,
                childOf: undefined,
                reference: "SOQL_Query_Example",
              },
            ],
            name: "aLoop",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "SOQL_Query_Example",
              ],
              label: [
                "SOQL Query Example",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "326",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "notnull",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "dosomethingelse",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Industry",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "None",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "true",
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordLookups",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "notnull",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "notnull",
              },
              {
                element: [
                  {
                    targetReference: [
                      "dosomethingelse",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "dosomethingelse",
              },
            ],
            name: "SOQL_Query_Example",
            locationX: "176",
            locationY: "326",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "aLoop",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "aLoop",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "A collection of Accounts",
              ],
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "true",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Accounts",
            dataType: "SObject",
          },
        ],
        startReference: "aLoop",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/SOQL_Query_In_A_Loop.flow-meta.xml",
        name: "SOQL_Query_In_A_Loop",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "dosomethingelse",
              ],
              label: [
                "dosomethingelse",
              ],
              locationX: [
                "704",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "NewCase",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              nameSegment: [
                "NewCase",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          decisions: [
            {
              name: [
                "notnull",
              ],
              label: [
                "notnull",
              ],
              locationX: [
                "352",
              ],
              locationY: [
                "350",
              ],
              defaultConnector: [
                {
                  isGoTo: [
                    "true",
                  ],
                  targetReference: [
                    "dosomethingelse",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "notnulln",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "SOQL_Query_Example",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "aLoop",
                      ],
                    },
                  ],
                  label: [
                    "notnull",
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates a violation of the rule \"SOQL Query In A Loop\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "SOQL Query In A Loop {!$Flow.CurrentDateTime}",
          ],
          label: [
            "SOQL Query In A Loop",
          ],
          loops: [
            {
              description: [
                "an example loop",
              ],
              name: [
                "aLoop",
              ],
              label: [
                "aLoop",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              collectionReference: [
                "Accounts",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "SOQL_Query_Example",
                  ],
                },
              ],
            },
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordLookups: [
            {
              name: [
                "SOQL_Query_Example",
              ],
              label: [
                "SOQL Query Example",
              ],
              locationX: [
                "352",
              ],
              locationY: [
                "242",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "notnull",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "dosomethingelse",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Industry",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "None",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "true",
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              description: [
                "A collection of Accounts",
              ],
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "true",
              ],
              objectType: [
                "Account",
              ],
            },
          ],
        },
        label: [
          "SOQL Query In A Loop",
        ],
        interviewLabel: [
          "SOQL Query In A Loop {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "aLoop",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "dosomethingelse",
              ],
              label: [
                "dosomethingelse",
              ],
              locationX: [
                "704",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "NewCase",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              nameSegment: [
                "NewCase",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "dosomethingelse",
            locationX: "704",
            locationY: "350",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "notnull",
              ],
              label: [
                "notnull",
              ],
              locationX: [
                "352",
              ],
              locationY: [
                "350",
              ],
              defaultConnector: [
                {
                  isGoTo: [
                    "true",
                  ],
                  targetReference: [
                    "dosomethingelse",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "notnulln",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "SOQL_Query_Example",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "aLoop",
                      ],
                    },
                  ],
                  label: [
                    "notnull",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    isGoTo: [
                      "true",
                    ],
                    targetReference: [
                      "dosomethingelse",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "dosomethingelse",
              },
              {
                element: [
                  {
                    targetReference: [
                      "aLoop",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "notnulln",
                childOf: "rules",
                reference: "aLoop",
              },
            ],
            name: "notnull",
            locationX: "352",
            locationY: "350",
          },
          {
            element: "This flow demonstrates a violation of the rule \"SOQL Query In A Loop\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "SOQL Query In A Loop {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "SOQL Query In A Loop",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "an example loop",
              ],
              name: [
                "aLoop",
              ],
              label: [
                "aLoop",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              collectionReference: [
                "Accounts",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "SOQL_Query_Example",
                  ],
                },
              ],
            },
            subtype: "loops",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "SOQL_Query_Example",
                    ],
                  },
                ],
                processed: false,
                type: "nextValueConnector",
                childName: undefined,
                childOf: undefined,
                reference: "SOQL_Query_Example",
              },
              {
                element: undefined,
                processed: false,
                type: "noMoreValuesConnector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "aLoop",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "SOQL_Query_Example",
              ],
              label: [
                "SOQL Query Example",
              ],
              locationX: [
                "352",
              ],
              locationY: [
                "242",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "notnull",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "dosomethingelse",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Industry",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "None",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "true",
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordLookups",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "notnull",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "notnull",
              },
              {
                element: [
                  {
                    targetReference: [
                      "dosomethingelse",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "dosomethingelse",
              },
            ],
            name: "SOQL_Query_Example",
            locationX: "352",
            locationY: "242",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "aLoop",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "aLoop",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "A collection of Accounts",
              ],
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "true",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Accounts",
            dataType: "SObject",
          },
        ],
        startReference: "aLoop",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "SOQL_Query_Example",
                  ],
                  label: [
                    "SOQL Query Example",
                  ],
                  locationX: [
                    "352",
                  ],
                  locationY: [
                    "242",
                  ],
                  assignNullValuesIfNoRecordsFound: [
                    "false",
                  ],
                  connector: [
                    {
                      targetReference: [
                        "notnull",
                      ],
                    },
                  ],
                  faultConnector: [
                    {
                      targetReference: [
                        "dosomethingelse",
                      ],
                    },
                  ],
                  filterLogic: [
                    "and",
                  ],
                  filters: [
                    {
                      field: [
                        "Industry",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      value: [
                        {
                          stringValue: [
                            "None",
                          ],
                        },
                      ],
                    },
                  ],
                  getFirstRecordOnly: [
                    "true",
                  ],
                  object: [
                    "Account",
                  ],
                  storeOutputAutomatically: [
                    "true",
                  ],
                },
                subtype: "recordLookups",
                metaType: "node",
                connectors: [
                  {
                    element: [
                      {
                        targetReference: [
                          "notnull",
                        ],
                      },
                    ],
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "notnull",
                  },
                  {
                    element: [
                      {
                        targetReference: [
                          "dosomethingelse",
                        ],
                      },
                    ],
                    processed: false,
                    type: "faultConnector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "dosomethingelse",
                  },
                ],
                name: "SOQL_Query_Example",
                locationX: "352",
                locationY: "242",
              },
              name: "SOQL_Query_Example",
              metaType: "node",
              type: "recordLookups",
              details: {
                locationX: "352",
                locationY: "242",
                connectsTo: [
                  "notnull",
                  "dosomethingelse",
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Outdated_API_Version_Fixed.flow-meta.xml",
        name: "Outdated_API_Version_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Outdated API Version\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Outdated API Version Fixed {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Outdated API Version",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "Flow",
          ],
          screens: [
            {
              name: [
                "mockscreen",
              ],
              label: [
                "mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mockscreen",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Fix: Outdated API Version",
        ],
        interviewLabel: [
          "Outdated API Version Fixed {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "Flow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "mockscreen",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "Flow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Outdated API Version\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Outdated API Version Fixed {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Outdated API Version",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "Flow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "mockscreen",
              ],
              label: [
                "mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "mockscreen",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mockscreen",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mockscreen",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mockscreen",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "mockscreen",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Outdated_API_Version.flow-meta.xml",
        name: "Outdated_API_Version",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          description: [
            "This flow demonstrates a violation of the rule \"Outdated API Version\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Outdated API Version {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Outdated API Version",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "Flow",
          ],
          screens: [
            {
              name: [
                "mockscreen",
              ],
              label: [
                "mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mockscreen",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Outdated API Version",
        ],
        interviewLabel: [
          "Outdated API Version {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "Flow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "mockscreen",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "Flow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "This flow demonstrates a violation of the rule \"Outdated API Version\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Outdated API Version {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Outdated API Version",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "Flow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "mockscreen",
              ],
              label: [
                "mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "mockscreen",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mockscreen",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mockscreen",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mockscreen",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "mockscreen",
      },
      ruleResults: [
        {
          details: [
            {
              violation: {
                metaType: "attribute",
                name: "API Version <49",
                subtype: "apiVersion",
                expression: "<49",
              },
              name: "API Version <49",
              metaType: "attribute",
              type: "apiVersion",
              details: {
                expression: "<49",
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Missing_Null_Handler_Fixed.flow-meta.xml",
        name: "Missing_Null_Handler_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "review_error",
              ],
              label: [
                "review error",
              ],
              locationX: [
                "264",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              connector: [
                {
                  targetReference: [
                    "Assign_New_Account_Name",
                  ],
                },
              ],
              faultConnector: [
                {
                  isGoTo: [
                    "true",
                  ],
                  targetReference: [
                    "something_went_wrong",
                  ],
                },
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            {
              name: [
                "something_went_wrong",
              ],
              label: [
                "something went wrong",
              ],
              locationX: [
                "792",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          assignments: [
            {
              name: [
                "Assign_New_Account_Name",
              ],
              label: [
                "Assign New Account Name",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "590",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "GetAnAccount.Name",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Test",
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          decisions: [
            {
              name: [
                "ifNotNull",
              ],
              label: [
                "ifNotNull",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "review_error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "notNull",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "GetAnAccount",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Assign_New_Account_Name",
                      ],
                    },
                  ],
                  label: [
                    "notNull",
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Missing Null Handler\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Fix: Missing null handlers {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Missing Null Handler",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordLookups: [
            {
              name: [
                "GetAnAccount",
              ],
              label: [
                "GetAnAccount",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "ifNotNull",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "something_went_wrong",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Name",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Acme",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "true",
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "GetAnAccount",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Fix: Missing Null Handler",
        ],
        interviewLabel: [
          "Fix: Missing null handlers {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "GetAnAccount",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "review_error",
              ],
              label: [
                "review error",
              ],
              locationX: [
                "264",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              connector: [
                {
                  targetReference: [
                    "Assign_New_Account_Name",
                  ],
                },
              ],
              faultConnector: [
                {
                  isGoTo: [
                    "true",
                  ],
                  targetReference: [
                    "something_went_wrong",
                  ],
                },
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Assign_New_Account_Name",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Assign_New_Account_Name",
              },
              {
                element: [
                  {
                    isGoTo: [
                      "true",
                    ],
                    targetReference: [
                      "something_went_wrong",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "something_went_wrong",
              },
            ],
            name: "review_error",
            locationX: "264",
            locationY: "350",
          },
          {
            element: {
              name: [
                "something_went_wrong",
              ],
              label: [
                "something went wrong",
              ],
              locationX: [
                "792",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "something_went_wrong",
            locationX: "792",
            locationY: "242",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Assign_New_Account_Name",
              ],
              label: [
                "Assign New Account Name",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "590",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "GetAnAccount.Name",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Test",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Assign_New_Account_Name",
            locationX: "176",
            locationY: "590",
          },
          {
            element: {
              name: [
                "ifNotNull",
              ],
              label: [
                "ifNotNull",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              defaultConnector: [
                {
                  targetReference: [
                    "review_error",
                  ],
                },
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "notNull",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "GetAnAccount",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Assign_New_Account_Name",
                      ],
                    },
                  ],
                  label: [
                    "notNull",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "review_error",
                    ],
                  },
                ],
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "review_error",
              },
              {
                element: [
                  {
                    targetReference: [
                      "Assign_New_Account_Name",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "notNull",
                childOf: "rules",
                reference: "Assign_New_Account_Name",
              },
            ],
            name: "ifNotNull",
            locationX: "176",
            locationY: "242",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Missing Null Handler\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Fix: Missing null handlers {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Missing Null Handler",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "GetAnAccount",
              ],
              label: [
                "GetAnAccount",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "ifNotNull",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "something_went_wrong",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Name",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Acme",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "true",
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordLookups",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "ifNotNull",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "ifNotNull",
              },
              {
                element: [
                  {
                    targetReference: [
                      "something_went_wrong",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "something_went_wrong",
              },
            ],
            name: "GetAnAccount",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "GetAnAccount",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "GetAnAccount",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "GetAnAccount",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "GetAnAccount",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Missing_Null_Handler.flow-meta.xml",
        name: "Missing_Null_Handler",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "something_went_wrong",
              ],
              label: [
                "something went wrong",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          assignments: [
            {
              name: [
                "Assign_New_Account_Name",
              ],
              label: [
                "Assign New Account Name",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "GetAnAccount.Name",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Test",
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates a violation of the rule \"Missing Null Handler\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Missing Null Handlers {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Missing Null Handler",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordLookups: [
            {
              name: [
                "GetAnAccount",
              ],
              label: [
                "GetAnAccount",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "Assign_New_Account_Name",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "something_went_wrong",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Name",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Acme",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "true",
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "GetAnAccount",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Missing Null Handler",
        ],
        interviewLabel: [
          "Missing Null Handlers {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "GetAnAccount",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "something_went_wrong",
              ],
              label: [
                "something went wrong",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "something_went_wrong",
            locationX: "440",
            locationY: "242",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Assign_New_Account_Name",
              ],
              label: [
                "Assign New Account Name",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "GetAnAccount.Name",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Test",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Assign_New_Account_Name",
            locationX: "176",
            locationY: "242",
          },
          {
            element: "This flow demonstrates a violation of the rule \"Missing Null Handler\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Missing Null Handlers {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Missing Null Handler",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "GetAnAccount",
              ],
              label: [
                "GetAnAccount",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "Assign_New_Account_Name",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "something_went_wrong",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Name",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Acme",
                      ],
                    },
                  ],
                },
              ],
              getFirstRecordOnly: [
                "true",
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordLookups",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Assign_New_Account_Name",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Assign_New_Account_Name",
              },
              {
                element: [
                  {
                    targetReference: [
                      "something_went_wrong",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "something_went_wrong",
              },
            ],
            name: "GetAnAccount",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "GetAnAccount",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "GetAnAccount",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "GetAnAccount",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "GetAnAccount",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "GetAnAccount",
                  ],
                  label: [
                    "GetAnAccount",
                  ],
                  locationX: [
                    "176",
                  ],
                  locationY: [
                    "134",
                  ],
                  assignNullValuesIfNoRecordsFound: [
                    "false",
                  ],
                  connector: [
                    {
                      targetReference: [
                        "Assign_New_Account_Name",
                      ],
                    },
                  ],
                  faultConnector: [
                    {
                      targetReference: [
                        "something_went_wrong",
                      ],
                    },
                  ],
                  filterLogic: [
                    "and",
                  ],
                  filters: [
                    {
                      field: [
                        "Name",
                      ],
                      operator: [
                        "EqualTo",
                      ],
                      value: [
                        {
                          stringValue: [
                            "Acme",
                          ],
                        },
                      ],
                    },
                  ],
                  getFirstRecordOnly: [
                    "true",
                  ],
                  object: [
                    "Account",
                  ],
                  storeOutputAutomatically: [
                    "true",
                  ],
                },
                subtype: "recordLookups",
                metaType: "node",
                connectors: [
                  {
                    element: [
                      {
                        targetReference: [
                          "Assign_New_Account_Name",
                        ],
                      },
                    ],
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "Assign_New_Account_Name",
                  },
                  {
                    element: [
                      {
                        targetReference: [
                          "something_went_wrong",
                        ],
                      },
                    ],
                    processed: false,
                    type: "faultConnector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "something_went_wrong",
                  },
                ],
                name: "GetAnAccount",
                locationX: "176",
                locationY: "134",
              },
              name: "GetAnAccount",
              metaType: "node",
              type: "recordLookups",
              details: {
                locationX: "176",
                locationY: "134",
                connectsTo: [
                  "Assign_New_Account_Name",
                  "something_went_wrong",
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Missing_Flow_Description_Fixed.flow-meta.xml",
        name: "Missing_Flow_Description_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          assignments: [
            {
              name: [
                "do_Anything",
              ],
              label: [
                "do Anything",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "text",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "new text",
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Missing Flow Description\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Missing Flow Description Fixed {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Missing Flow Description",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "do_Anything",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "text",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  stringValue: [
                    "any text",
                  ],
                },
              ],
            },
          ],
        },
        label: [
          "Fix: Missing Flow Description",
        ],
        interviewLabel: [
          "Missing Flow Description Fixed {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "do_Anything",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "do_Anything",
              ],
              label: [
                "do Anything",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "text",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "new text",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "do_Anything",
            locationX: "176",
            locationY: "134",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Missing Flow Description\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Missing Flow Description Fixed {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Missing Flow Description",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "do_Anything",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "do_Anything",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "do_Anything",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "text",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  stringValue: [
                    "any text",
                  ],
                },
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "text",
            dataType: "String",
          },
        ],
        startReference: "do_Anything",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Missing_Flow_Description.flow-meta.xml",
        name: "Missing_Flow_Description",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          assignments: [
            {
              name: [
                "do_Anything",
              ],
              label: [
                "do Anything",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "text",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "new text",
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Missing Flow Description {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Missing Flow Description",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "do_Anything",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "text",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  stringValue: [
                    "any text",
                  ],
                },
              ],
            },
          ],
        },
        label: [
          "Missing Flow Description",
        ],
        interviewLabel: [
          "Missing Flow Description {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "do_Anything",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "do_Anything",
              ],
              label: [
                "do Anything",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "text",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      stringValue: [
                        "new text",
                      ],
                    },
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "do_Anything",
            locationX: "176",
            locationY: "134",
          },
          {
            element: "Missing Flow Description {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Missing Flow Description",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "do_Anything",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "do_Anything",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "do_Anything",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "text",
              ],
              dataType: [
                "String",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              value: [
                {
                  stringValue: [
                    "any text",
                  ],
                },
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "text",
            dataType: "String",
          },
        ],
        startReference: "do_Anything",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                metaType: "attribute",
                name: "undefined",
                subtype: "description",
                expression: "!==null",
              },
              name: "undefined",
              metaType: "attribute",
              type: "description",
              details: {
                expression: "!==null",
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Missing_Error_Handler_Fixed.flow-meta.xml",
        name: "Missing_Error_Handler_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "dosomethingelse",
              ],
              label: [
                "dosomethingelse",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "NewTask",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "OwnerId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "NewTask",
              ],
              versionSegment: [
                "1",
              ],
            },
            {
              name: [
                "log_call",
              ],
              label: [
                "log call",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              actionName: [
                "LogACall",
              ],
              actionType: [
                "quickAction",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "dosomethingelse",
                  ],
                },
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              nameSegment: [
                "LogACall",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Missing Error Handler\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Fix: Missing Error Handler {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Missing Error Handler",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "log_call",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Fix: Missing Error Handler",
        ],
        interviewLabel: [
          "Fix: Missing Error Handler {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "log_call",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "dosomethingelse",
              ],
              label: [
                "dosomethingelse",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "NewTask",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "OwnerId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "NewTask",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "dosomethingelse",
            locationX: "440",
            locationY: "242",
          },
          {
            element: {
              name: [
                "log_call",
              ],
              label: [
                "log call",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              actionName: [
                "LogACall",
              ],
              actionType: [
                "quickAction",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "dosomethingelse",
                  ],
                },
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              nameSegment: [
                "LogACall",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "dosomethingelse",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "dosomethingelse",
              },
            ],
            name: "log_call",
            locationX: "176",
            locationY: "134",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Missing Error Handler\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Fix: Missing Error Handler {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Missing Error Handler",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "log_call",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "log_call",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "log_call",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "log_call",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Missing_Error_Handler.flow-meta.xml",
        name: "Missing_Error_Handler",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "log_call",
              ],
              label: [
                "log call",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              actionName: [
                "LogACall",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              nameSegment: [
                "LogACall",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates a violation of the rule \"Missing Error Handler\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Missing Error Handler {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Missing Error Handler",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "log_call",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Missing Error Handler",
        ],
        interviewLabel: [
          "Missing Error Handler {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "log_call",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "log_call",
              ],
              label: [
                "log call",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              actionName: [
                "LogACall",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              nameSegment: [
                "LogACall",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "log_call",
            locationX: "176",
            locationY: "134",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates a violation of the rule \"Missing Error Handler\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Missing Error Handler {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Missing Error Handler",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "log_call",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "log_call",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "log_call",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "log_call",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "log_call",
                  ],
                  label: [
                    "log call",
                  ],
                  locationX: [
                    "176",
                  ],
                  locationY: [
                    "134",
                  ],
                  actionName: [
                    "LogACall",
                  ],
                  actionType: [
                    "quickAction",
                  ],
                  flowTransactionModel: [
                    "CurrentTransaction",
                  ],
                  nameSegment: [
                    "LogACall",
                  ],
                  versionSegment: [
                    "1",
                  ],
                },
                subtype: "actionCalls",
                metaType: "node",
                connectors: [
                ],
                name: "log_call",
                locationX: "176",
                locationY: "134",
              },
              name: "log_call",
              metaType: "node",
              type: "actionCalls",
              details: {
                locationX: "176",
                locationY: "134",
                connectsTo: [
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Hardcoded_Id_Fixed.flow-meta.xml",
        name: "Hardcoded_Id_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "create_account_manually",
              ],
              label: [
                "create account manually",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "458",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            {
              name: [
                "create_task",
              ],
              label: [
                "create task",
              ],
              locationX: [
                "842",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          decisions: [
            {
              name: [
                "CheckIfUserIsFound",
              ],
              label: [
                "CheckIfUserIsFound",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "242",
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "userfound",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "UserId.Id",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "create_Test_Account",
                      ],
                    },
                  ],
                  label: [
                    "userfound",
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Hardcoded Id\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Fix: Hardcoded Id {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Hardcoded Id",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordCreates: [
            {
              name: [
                "create_Test_Account",
              ],
              label: [
                "create Test Account",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "350",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_account_manually",
                  ],
                },
              ],
              inputAssignments: [
                {
                  field: [
                    "Name",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Test Account",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "OwnerId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "UserId.Id",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          recordLookups: [
            {
              name: [
                "getUserId",
              ],
              label: [
                "getUserId",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "134",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "CheckIfUserIsFound",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_task",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Name",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Acme",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              outputAssignments: [
                {
                  assignToReference: [
                    "UserId.Id",
                  ],
                  field: [
                    "OwnerId",
                  ],
                },
              ],
            },
          ],
          start: [
            {
              locationX: [
                "188",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "getUserId",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "Account",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
            {
              name: [
                "UserId",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "User",
              ],
            },
          ],
        },
        label: [
          "Fix: Hardcoded Id",
        ],
        interviewLabel: [
          "Fix: Hardcoded Id {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "188",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "getUserId",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "create_account_manually",
              ],
              label: [
                "create account manually",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "458",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "create_account_manually",
            locationX: "314",
            locationY: "458",
          },
          {
            element: {
              name: [
                "create_task",
              ],
              label: [
                "create task",
              ],
              locationX: [
                "842",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "create_task",
            locationX: "842",
            locationY: "242",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CheckIfUserIsFound",
              ],
              label: [
                "CheckIfUserIsFound",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "242",
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "userfound",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "UserId.Id",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  connector: [
                    {
                      targetReference: [
                        "create_Test_Account",
                      ],
                    },
                  ],
                  label: [
                    "userfound",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
              },
              {
                element: [
                  {
                    targetReference: [
                      "create_Test_Account",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: "userfound",
                childOf: "rules",
                reference: "create_Test_Account",
              },
            ],
            name: "CheckIfUserIsFound",
            locationX: "314",
            locationY: "242",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Hardcoded Id\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Fix: Hardcoded Id {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Hardcoded Id",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "create_Test_Account",
              ],
              label: [
                "create Test Account",
              ],
              locationX: [
                "50",
              ],
              locationY: [
                "350",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_account_manually",
                  ],
                },
              ],
              inputAssignments: [
                {
                  field: [
                    "Name",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Test Account",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "OwnerId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "UserId.Id",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordCreates",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "create_account_manually",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "create_account_manually",
              },
            ],
            name: "create_Test_Account",
            locationX: "50",
            locationY: "350",
          },
          {
            element: {
              name: [
                "getUserId",
              ],
              label: [
                "getUserId",
              ],
              locationX: [
                "314",
              ],
              locationY: [
                "134",
              ],
              assignNullValuesIfNoRecordsFound: [
                "false",
              ],
              connector: [
                {
                  targetReference: [
                    "CheckIfUserIsFound",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_task",
                  ],
                },
              ],
              filterLogic: [
                "and",
              ],
              filters: [
                {
                  field: [
                    "Name",
                  ],
                  operator: [
                    "EqualTo",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Acme",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              outputAssignments: [
                {
                  assignToReference: [
                    "UserId.Id",
                  ],
                  field: [
                    "OwnerId",
                  ],
                },
              ],
            },
            subtype: "recordLookups",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "CheckIfUserIsFound",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "CheckIfUserIsFound",
              },
              {
                element: [
                  {
                    targetReference: [
                      "create_task",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "create_task",
              },
            ],
            name: "getUserId",
            locationX: "314",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "188",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "getUserId",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "getUserId",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "getUserId",
              },
            ],
            name: "flowstart",
            locationX: "188",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Account",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Account",
            dataType: "SObject",
          },
          {
            element: {
              name: [
                "UserId",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "User",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "UserId",
            dataType: "SObject",
          },
        ],
        startReference: "getUserId",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Hardcoded_Id.flow-meta.xml",
        name: "Hardcoded_Id",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "create_account_manually",
              ],
              label: [
                "create account manually",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates a violation of the rule \"Hardcoded Id\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Hardcoded Ids] {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Hardcoded Id",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordCreates: [
            {
              name: [
                "create_Test_Account",
              ],
              label: [
                "create Test Account",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_account_manually",
                  ],
                },
              ],
              inputAssignments: [
                {
                  field: [
                    "Name",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Test Account",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "OwnerId",
                  ],
                  value: [
                    {
                      stringValue: [
                        "005Dn000006GuG4IAK",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "create_Test_Account",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "Account",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
          ],
        },
        label: [
          "Hardcoded Id",
        ],
        interviewLabel: [
          "Hardcoded Ids] {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "create_Test_Account",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "create_account_manually",
              ],
              label: [
                "create account manually",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "242",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "create_account_manually",
            locationX: "440",
            locationY: "242",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates a violation of the rule \"Hardcoded Id\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Hardcoded Ids] {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Hardcoded Id",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "create_Test_Account",
              ],
              label: [
                "create Test Account",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_account_manually",
                  ],
                },
              ],
              inputAssignments: [
                {
                  field: [
                    "Name",
                  ],
                  value: [
                    {
                      stringValue: [
                        "Test Account",
                      ],
                    },
                  ],
                },
                {
                  field: [
                    "OwnerId",
                  ],
                  value: [
                    {
                      stringValue: [
                        "005Dn000006GuG4IAK",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordCreates",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "create_account_manually",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "create_account_manually",
              },
            ],
            name: "create_Test_Account",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "create_Test_Account",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "create_Test_Account",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "create_Test_Account",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Account",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Account",
            dataType: "SObject",
          },
        ],
        startReference: "create_Test_Account",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "create_Test_Account",
                  ],
                  label: [
                    "create Test Account",
                  ],
                  locationX: [
                    "176",
                  ],
                  locationY: [
                    "134",
                  ],
                  faultConnector: [
                    {
                      targetReference: [
                        "create_account_manually",
                      ],
                    },
                  ],
                  inputAssignments: [
                    {
                      field: [
                        "Name",
                      ],
                      value: [
                        {
                          stringValue: [
                            "Test Account",
                          ],
                        },
                      ],
                    },
                    {
                      field: [
                        "OwnerId",
                      ],
                      value: [
                        {
                          stringValue: [
                            "005Dn000006GuG4IAK",
                          ],
                        },
                      ],
                    },
                  ],
                  object: [
                    "Account",
                  ],
                  storeOutputAutomatically: [
                    "true",
                  ],
                },
                subtype: "recordCreates",
                metaType: "node",
                connectors: [
                  {
                    element: [
                      {
                        targetReference: [
                          "create_account_manually",
                        ],
                      },
                    ],
                    processed: false,
                    type: "faultConnector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "create_account_manually",
                  },
                ],
                name: "create_Test_Account",
                locationX: "176",
                locationY: "134",
              },
              name: "create_Test_Account",
              metaType: "node",
              type: "recordCreates",
              details: {
                locationX: "176",
                locationY: "134",
                connectsTo: [
                  "create_account_manually",
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Flow_Naming_Convention_Fixed.flow-meta.xml",
        name: "Flow_Naming_Convention_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          decisions: [
            {
              name: [
                "isAccountsProvided",
              ],
              label: [
                "isAccountsProvided",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "NotNull",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Accounts",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  label: [
                    "NotNull",
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Flow Naming Convention\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Fix: Flow Naming Convention {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Flow Naming Convention",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "isAccountsProvided",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
          ],
        },
        label: [
          "Fix: Flow Naming Convention",
        ],
        interviewLabel: [
          "Fix: Flow Naming Convention {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "isAccountsProvided",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "isAccountsProvided",
              ],
              label: [
                "isAccountsProvided",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "NotNull",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Accounts",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  label: [
                    "NotNull",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "isAccountsProvided",
            locationX: "176",
            locationY: "134",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Flow Naming Convention\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Fix: Flow Naming Convention {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Flow Naming Convention",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "isAccountsProvided",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "isAccountsProvided",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "isAccountsProvided",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Accounts",
            dataType: "SObject",
          },
        ],
        startReference: "isAccountsProvided",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/FlowNamingConvention.flow-meta.xml",
        name: "FlowNamingConvention",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "58.0",
          ],
          decisions: [
            {
              name: [
                "isAccountsProvided",
              ],
              label: [
                "isAccountsProvided",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "NotNull",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Accounts",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  label: [
                    "NotNull",
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates a violation of the rule \"Flow Naming Convention\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Flow Naming Convention {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Flow Naming Convention",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "isAccountsProvided",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
          ],
        },
        label: [
          "Flow Naming Convention",
        ],
        interviewLabel: [
          "Flow Naming Convention {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "isAccountsProvided",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "isAccountsProvided",
              ],
              label: [
                "isAccountsProvided",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              defaultConnectorLabel: [
                "Default Outcome",
              ],
              rules: [
                {
                  name: [
                    "NotNull",
                  ],
                  conditionLogic: [
                    "and",
                  ],
                  conditions: [
                    {
                      leftValueReference: [
                        "Accounts",
                      ],
                      operator: [
                        "IsNull",
                      ],
                      rightValue: [
                        {
                          booleanValue: [
                            "false",
                          ],
                        },
                      ],
                    },
                  ],
                  label: [
                    "NotNull",
                  ],
                },
              ],
            },
            subtype: "decisions",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "defaultConnector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "isAccountsProvided",
            locationX: "176",
            locationY: "134",
          },
          {
            element: "This flow demonstrates a violation of the rule \"Flow Naming Convention\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Flow Naming Convention {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Flow Naming Convention",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "isAccountsProvided",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "isAccountsProvided",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "isAccountsProvided",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Accounts",
            dataType: "SObject",
          },
        ],
        startReference: "isAccountsProvided",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                metaType: "attribute",
                name: "FlowNamingConvention",
                subtype: "name",
                expression: "[A-Za-z0-9]+_[A-Za-z0-9]+",
              },
              name: "FlowNamingConvention",
              metaType: "attribute",
              type: "name",
              details: {
                expression: "[A-Za-z0-9]+_[A-Za-z0-9]+",
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Duplicate_DML_Operation_Fixed.flow-meta.xml",
        name: "Duplicate_DML_Operation_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "create_account_manually",
              ],
              label: [
                "create account manually",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Duplicate DML Operation\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Duplicate DML Operation Fixed {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Duplicate DML Operation",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "Flow",
          ],
          recordCreates: [
            {
              name: [
                "createAccount",
              ],
              label: [
                "createAccount",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen_2",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_account_manually",
                  ],
                },
              ],
              inputAssignments: [
                {
                  field: [
                    "Name",
                  ],
                  value: [
                    {
                      elementReference: [
                        "account_name",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          screens: [
            {
              name: [
                "mock_screen_1",
              ],
              label: [
                "mock screen 1",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              connector: [
                {
                  targetReference: [
                    "createAccount",
                  ],
                },
              ],
              fields: [
                {
                  name: [
                    "account_name",
                  ],
                  dataType: [
                    "String",
                  ],
                  fieldText: [
                    "account name",
                  ],
                  fieldType: [
                    "InputField",
                  ],
                  isRequired: [
                    "false",
                  ],
                },
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            {
              name: [
                "mock_screen_2",
              ],
              label: [
                "mock screen 2",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "350",
              ],
              allowBack: [
                "false",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen_1",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "Account",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
          ],
        },
        label: [
          "Fix: Duplicate DML Operation",
        ],
        interviewLabel: [
          "Duplicate DML Operation Fixed {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "Flow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "mock_screen_1",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "Flow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "create_account_manually",
              ],
              label: [
                "create account manually",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "create_account_manually",
            locationX: "440",
            locationY: "350",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Duplicate DML Operation\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Duplicate DML Operation Fixed {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Duplicate DML Operation",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "Flow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "createAccount",
              ],
              label: [
                "createAccount",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen_2",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_account_manually",
                  ],
                },
              ],
              inputAssignments: [
                {
                  field: [
                    "Name",
                  ],
                  value: [
                    {
                      elementReference: [
                        "account_name",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordCreates",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mock_screen_2",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mock_screen_2",
              },
              {
                element: [
                  {
                    targetReference: [
                      "create_account_manually",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "create_account_manually",
              },
            ],
            name: "createAccount",
            locationX: "176",
            locationY: "242",
          },
          {
            element: {
              name: [
                "mock_screen_1",
              ],
              label: [
                "mock screen 1",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              connector: [
                {
                  targetReference: [
                    "createAccount",
                  ],
                },
              ],
              fields: [
                {
                  name: [
                    "account_name",
                  ],
                  dataType: [
                    "String",
                  ],
                  fieldText: [
                    "account name",
                  ],
                  fieldType: [
                    "InputField",
                  ],
                  isRequired: [
                    "false",
                  ],
                },
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "createAccount",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "createAccount",
              },
            ],
            name: "mock_screen_1",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              name: [
                "mock_screen_2",
              ],
              label: [
                "mock screen 2",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "350",
              ],
              allowBack: [
                "false",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "mock_screen_2",
            locationX: "176",
            locationY: "350",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen_1",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mock_screen_1",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mock_screen_1",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Account",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Account",
            dataType: "SObject",
          },
        ],
        startReference: "mock_screen_1",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Duplicate_DML_Operation.flow-meta.xml",
        name: "Duplicate_DML_Operation",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "create_account_manually",
              ],
              label: [
                "create account manually",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates a violation of the rule \"Duplicate DML Operation\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Duplicate DML Operation {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Duplicate DML Operation",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "Flow",
          ],
          recordCreates: [
            {
              name: [
                "createAccount",
              ],
              label: [
                "createAccount",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen_2",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_account_manually",
                  ],
                },
              ],
              inputAssignments: [
                {
                  field: [
                    "Name",
                  ],
                  value: [
                    {
                      elementReference: [
                        "account_name",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
          ],
          screens: [
            {
              name: [
                "mock_screen_1",
              ],
              label: [
                "mock screen 1",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              connector: [
                {
                  targetReference: [
                    "createAccount",
                  ],
                },
              ],
              fields: [
                {
                  name: [
                    "account_name",
                  ],
                  dataType: [
                    "String",
                  ],
                  fieldText: [
                    "account name",
                  ],
                  fieldType: [
                    "InputField",
                  ],
                  isRequired: [
                    "false",
                  ],
                },
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            {
              name: [
                "mock_screen_2",
              ],
              label: [
                "mock screen 2",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "350",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen_1",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              name: [
                "Account",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
          ],
        },
        label: [
          "Duplicate DML Operation",
        ],
        interviewLabel: [
          "Duplicate DML Operation {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "Flow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "mock_screen_1",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "Flow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "create_account_manually",
              ],
              label: [
                "create account manually",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "$User.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "create_account_manually",
            locationX: "440",
            locationY: "350",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates a violation of the rule \"Duplicate DML Operation\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Duplicate DML Operation {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Duplicate DML Operation",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "Flow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "createAccount",
              ],
              label: [
                "createAccount",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen_2",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_account_manually",
                  ],
                },
              ],
              inputAssignments: [
                {
                  field: [
                    "Name",
                  ],
                  value: [
                    {
                      elementReference: [
                        "account_name",
                      ],
                    },
                  ],
                },
              ],
              object: [
                "Account",
              ],
              storeOutputAutomatically: [
                "true",
              ],
            },
            subtype: "recordCreates",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mock_screen_2",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mock_screen_2",
              },
              {
                element: [
                  {
                    targetReference: [
                      "create_account_manually",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "create_account_manually",
              },
            ],
            name: "createAccount",
            locationX: "176",
            locationY: "242",
          },
          {
            element: {
              name: [
                "mock_screen_1",
              ],
              label: [
                "mock screen 1",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              connector: [
                {
                  targetReference: [
                    "createAccount",
                  ],
                },
              ],
              fields: [
                {
                  name: [
                    "account_name",
                  ],
                  dataType: [
                    "String",
                  ],
                  fieldText: [
                    "account name",
                  ],
                  fieldType: [
                    "InputField",
                  ],
                  isRequired: [
                    "false",
                  ],
                },
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "createAccount",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "createAccount",
              },
            ],
            name: "mock_screen_1",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              name: [
                "mock_screen_2",
              ],
              label: [
                "mock screen 2",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "350",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "mock_screen_2",
            locationX: "176",
            locationY: "350",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mock_screen_1",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mock_screen_1",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mock_screen_1",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Account",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Account",
            dataType: "SObject",
          },
        ],
        startReference: "mock_screen_1",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "mock_screen_2",
                  ],
                  label: [
                    "mock screen 2",
                  ],
                  locationX: [
                    "176",
                  ],
                  locationY: [
                    "350",
                  ],
                  allowBack: [
                    "true",
                  ],
                  allowFinish: [
                    "true",
                  ],
                  allowPause: [
                    "true",
                  ],
                  showFooter: [
                    "true",
                  ],
                  showHeader: [
                    "true",
                  ],
                },
                subtype: "screens",
                metaType: "node",
                connectors: [
                  {
                    element: undefined,
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                  },
                ],
                name: "mock_screen_2",
                locationX: "176",
                locationY: "350",
              },
              name: "mock_screen_2",
              metaType: "node",
              type: "screens",
              details: {
                locationX: "176",
                locationY: "350",
                connectsTo: [
                  undefined,
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/DML_Statement_In_A_Loop_Fixed.flow-meta.xml",
        name: "DML_Statement_In_A_Loop_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              name: [
                "create_case_manually",
              ],
              label: [
                "create case manually",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "542",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "aLoop.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          assignments: [
            {
              description: [
                "Assigns values to newCase variable.",
              ],
              name: [
                "createNewCaseAssignment",
              ],
              label: [
                "createNewCaseAssignment",
              ],
              locationX: [
                "264",
              ],
              locationY: [
                "242",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "newCase.AccountId",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "aLoop.Id",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "newCase.OwnerId",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "aLoop.OwnerId",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "newCases",
                  ],
                  operator: [
                    "Add",
                  ],
                  value: [
                    {
                      elementReference: [
                        "newCase",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"DML Statement In A Loop\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "DML Statement In A Loop Fixed {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: DML Statement In A Loop",
          ],
          loops: [
            {
              description: [
                "an example loop",
              ],
              name: [
                "aLoop",
              ],
              label: [
                "aLoop",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              collectionReference: [
                "Accounts",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "createNewCaseAssignment",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "insert_cases",
                  ],
                },
              ],
            },
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordCreates: [
            {
              name: [
                "insert_cases",
              ],
              label: [
                "insert cases",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "434",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_case_manually",
                  ],
                },
              ],
              inputReference: [
                "newCases",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              description: [
                "A collection of Accounts",
              ],
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "true",
              ],
              objectType: [
                "Account",
              ],
            },
            {
              name: [
                "newCase",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Case",
              ],
            },
            {
              description: [
                "Collection of New Cases",
              ],
              name: [
                "newCases",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Case",
              ],
            },
            {
              description: [
                "a task",
              ],
              name: [
                "task",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Task",
              ],
            },
          ],
        },
        label: [
          "Fix: DML Statement In A Loop",
        ],
        interviewLabel: [
          "DML Statement In A Loop Fixed {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "aLoop",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              name: [
                "create_case_manually",
              ],
              label: [
                "create case manually",
              ],
              locationX: [
                "440",
              ],
              locationY: [
                "542",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "aLoop.Id",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "create_case_manually",
            locationX: "440",
            locationY: "542",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "Assigns values to newCase variable.",
              ],
              name: [
                "createNewCaseAssignment",
              ],
              label: [
                "createNewCaseAssignment",
              ],
              locationX: [
                "264",
              ],
              locationY: [
                "242",
              ],
              assignmentItems: [
                {
                  assignToReference: [
                    "newCase.AccountId",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "aLoop.Id",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "newCase.OwnerId",
                  ],
                  operator: [
                    "Assign",
                  ],
                  value: [
                    {
                      elementReference: [
                        "aLoop.OwnerId",
                      ],
                    },
                  ],
                },
                {
                  assignToReference: [
                    "newCases",
                  ],
                  operator: [
                    "Add",
                  ],
                  value: [
                    {
                      elementReference: [
                        "newCase",
                      ],
                    },
                  ],
                },
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
            subtype: "assignments",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "aLoop",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "aLoop",
              },
            ],
            name: "createNewCaseAssignment",
            locationX: "264",
            locationY: "242",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"DML Statement In A Loop\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "DML Statement In A Loop Fixed {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: DML Statement In A Loop",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "an example loop",
              ],
              name: [
                "aLoop",
              ],
              label: [
                "aLoop",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              collectionReference: [
                "Accounts",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "createNewCaseAssignment",
                  ],
                },
              ],
              noMoreValuesConnector: [
                {
                  targetReference: [
                    "insert_cases",
                  ],
                },
              ],
            },
            subtype: "loops",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "createNewCaseAssignment",
                    ],
                  },
                ],
                processed: false,
                type: "nextValueConnector",
                childName: undefined,
                childOf: undefined,
                reference: "createNewCaseAssignment",
              },
              {
                element: [
                  {
                    targetReference: [
                      "insert_cases",
                    ],
                  },
                ],
                processed: false,
                type: "noMoreValuesConnector",
                childName: undefined,
                childOf: undefined,
                reference: "insert_cases",
              },
            ],
            name: "aLoop",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "insert_cases",
              ],
              label: [
                "insert cases",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "434",
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_case_manually",
                  ],
                },
              ],
              inputReference: [
                "newCases",
              ],
            },
            subtype: "recordCreates",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "create_case_manually",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "create_case_manually",
              },
            ],
            name: "insert_cases",
            locationX: "176",
            locationY: "434",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "aLoop",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "aLoop",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "A collection of Accounts",
              ],
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "true",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Accounts",
            dataType: "SObject",
          },
          {
            element: {
              name: [
                "newCase",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Case",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "newCase",
            dataType: "SObject",
          },
          {
            element: {
              description: [
                "Collection of New Cases",
              ],
              name: [
                "newCases",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Case",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "newCases",
            dataType: "SObject",
          },
          {
            element: {
              description: [
                "a task",
              ],
              name: [
                "task",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Task",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "task",
            dataType: "SObject",
          },
        ],
        startReference: "aLoop",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/DML_Statement_In_A_Loop.flow-meta.xml",
        name: "DML_Statement_In_A_Loop",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          actionCalls: [
            {
              description: [
                "a Case failed to create automatically. Please examine its details manually.",
              ],
              name: [
                "create_case_manually",
              ],
              label: [
                "create case manually",
              ],
              locationX: [
                "528",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "createCase.OwnerId",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
          ],
          apiVersion: [
            "58.0",
          ],
          description: [
            "This flow demonstrates a violation of the rule \"DML Statement In A Loop\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "DML Statements In A Loop {!$Flow.CurrentDateTime}",
          ],
          label: [
            "DML Statement In A Loop",
          ],
          loops: [
            {
              description: [
                "an example loop",
              ],
              name: [
                "aLoop",
              ],
              label: [
                "aLoop",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              collectionReference: [
                "Accounts",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "createNewCase",
                  ],
                },
              ],
            },
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "AutoLaunchedFlow",
          ],
          recordCreates: [
            {
              description: [
                "creates a new case",
              ],
              name: [
                "createNewCase",
              ],
              label: [
                "createNewCase",
              ],
              locationX: [
                "264",
              ],
              locationY: [
                "242",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_case_manually",
                  ],
                },
              ],
              inputReference: [
                "createCase",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
          variables: [
            {
              description: [
                "A collection of Accounts",
              ],
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "true",
              ],
              objectType: [
                "Account",
              ],
            },
            {
              name: [
                "createCase",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Case",
              ],
            },
            {
              description: [
                "a task",
              ],
              name: [
                "task",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Task",
              ],
            },
          ],
        },
        label: [
          "DML Statement In A Loop",
        ],
        interviewLabel: [
          "DML Statements In A Loop {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "AutoLaunchedFlow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "aLoop",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "AutoLaunchedFlow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: {
              description: [
                "a Case failed to create automatically. Please examine its details manually.",
              ],
              name: [
                "create_case_manually",
              ],
              label: [
                "create case manually",
              ],
              locationX: [
                "528",
              ],
              locationY: [
                "350",
              ],
              actionName: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              actionType: [
                "quickAction",
              ],
              flowTransactionModel: [
                "CurrentTransaction",
              ],
              inputParameters: [
                {
                  name: [
                    "contextId",
                  ],
                  value: [
                    {
                      elementReference: [
                        "createCase.OwnerId",
                      ],
                    },
                  ],
                },
              ],
              nameSegment: [
                "FeedItem.NewTaskFromFeedItem",
              ],
              versionSegment: [
                "1",
              ],
            },
            subtype: "actionCalls",
            metaType: "node",
            connectors: [
            ],
            name: "create_case_manually",
            locationX: "528",
            locationY: "350",
          },
          {
            element: "58.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates a violation of the rule \"DML Statement In A Loop\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "DML Statements In A Loop {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "DML Statement In A Loop",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "an example loop",
              ],
              name: [
                "aLoop",
              ],
              label: [
                "aLoop",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              collectionReference: [
                "Accounts",
              ],
              iterationOrder: [
                "Asc",
              ],
              nextValueConnector: [
                {
                  targetReference: [
                    "createNewCase",
                  ],
                },
              ],
            },
            subtype: "loops",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "createNewCase",
                    ],
                  },
                ],
                processed: false,
                type: "nextValueConnector",
                childName: undefined,
                childOf: undefined,
                reference: "createNewCase",
              },
              {
                element: undefined,
                processed: false,
                type: "noMoreValuesConnector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "aLoop",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "AutoLaunchedFlow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "creates a new case",
              ],
              name: [
                "createNewCase",
              ],
              label: [
                "createNewCase",
              ],
              locationX: [
                "264",
              ],
              locationY: [
                "242",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
              faultConnector: [
                {
                  targetReference: [
                    "create_case_manually",
                  ],
                },
              ],
              inputReference: [
                "createCase",
              ],
            },
            subtype: "recordCreates",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "aLoop",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "aLoop",
              },
              {
                element: [
                  {
                    targetReference: [
                      "create_case_manually",
                    ],
                  },
                ],
                processed: false,
                type: "faultConnector",
                childName: undefined,
                childOf: undefined,
                reference: "create_case_manually",
              },
            ],
            name: "createNewCase",
            locationX: "264",
            locationY: "242",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "aLoop",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "aLoop",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "aLoop",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
          {
            element: {
              description: [
                "A collection of Accounts",
              ],
              name: [
                "Accounts",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "true",
              ],
              isInput: [
                "true",
              ],
              isOutput: [
                "true",
              ],
              objectType: [
                "Account",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "Accounts",
            dataType: "SObject",
          },
          {
            element: {
              name: [
                "createCase",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Case",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "createCase",
            dataType: "SObject",
          },
          {
            element: {
              description: [
                "a task",
              ],
              name: [
                "task",
              ],
              dataType: [
                "SObject",
              ],
              isCollection: [
                "false",
              ],
              isInput: [
                "false",
              ],
              isOutput: [
                "false",
              ],
              objectType: [
                "Task",
              ],
            },
            subtype: "variables",
            metaType: "variable",
            name: "task",
            dataType: "SObject",
          },
        ],
        startReference: "aLoop",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  description: [
                    "creates a new case",
                  ],
                  name: [
                    "createNewCase",
                  ],
                  label: [
                    "createNewCase",
                  ],
                  locationX: [
                    "264",
                  ],
                  locationY: [
                    "242",
                  ],
                  connector: [
                    {
                      targetReference: [
                        "aLoop",
                      ],
                    },
                  ],
                  faultConnector: [
                    {
                      targetReference: [
                        "create_case_manually",
                      ],
                    },
                  ],
                  inputReference: [
                    "createCase",
                  ],
                },
                subtype: "recordCreates",
                metaType: "node",
                connectors: [
                  {
                    element: [
                      {
                        targetReference: [
                          "aLoop",
                        ],
                      },
                    ],
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "aLoop",
                  },
                  {
                    element: [
                      {
                        targetReference: [
                          "create_case_manually",
                        ],
                      },
                    ],
                    processed: false,
                    type: "faultConnector",
                    childName: undefined,
                    childOf: undefined,
                    reference: "create_case_manually",
                  },
                ],
                name: "createNewCase",
                locationX: "264",
                locationY: "242",
              },
              name: "createNewCase",
              metaType: "node",
              type: "recordCreates",
              details: {
                locationX: "264",
                locationY: "242",
                connectsTo: [
                  "aLoop",
                  "create_case_manually",
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Copy_API_Name_Fixed.flow-meta.xml",
        name: "Copy_API_Name_Fixed",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "51.0",
          ],
          description: [
            "This flow demonstrates how to resolve a violation of the rule \"Copy API Name\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Fix: Copy API Name {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Fix: Copy API Name",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "Flow",
          ],
          screens: [
            {
              name: [
                "mockscreen",
              ],
              label: [
                "mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              connector: [
                {
                  targetReference: [
                    "second_mockscreen",
                  ],
                },
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            {
              name: [
                "second_mockscreen",
              ],
              label: [
                "second mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mockscreen",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Fix: Copy API Name",
        ],
        interviewLabel: [
          "Fix: Copy API Name {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "Flow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "mockscreen",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "Flow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "51.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates how to resolve a violation of the rule \"Copy API Name\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Fix: Copy API Name {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Fix: Copy API Name",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "Flow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "mockscreen",
              ],
              label: [
                "mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              connector: [
                {
                  targetReference: [
                    "second_mockscreen",
                  ],
                },
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "second_mockscreen",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "second_mockscreen",
              },
            ],
            name: "mockscreen",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              name: [
                "second_mockscreen",
              ],
              label: [
                "second mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "second_mockscreen",
            locationX: "176",
            locationY: "242",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mockscreen",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mockscreen",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mockscreen",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "mockscreen",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
    {
      flow: {
        flowVariables: [
          "choices",
          "constants",
          "dynamicChoiceSets",
          "formulas",
          "variables",
        ],
        flowResources: [
          "textTemplates",
          "stages",
        ],
        flowMetadata: [
          "description",
          "apiVersion",
          "processMetadataValues",
          "processType",
          "interviewLabel",
          "label",
          "status",
          "runInMode",
          "startElementReference",
          "isTemplate",
          "fullName",
          "timeZoneSidKey",
          "isAdditionalPermissionRequiredToRun",
          "migratedFromWorkflowRuleName",
          "triggerOrder",
          "Environments",
          "segment",
        ],
        flowNodes: [
          "actionCalls",
          "apexPluginCalls",
          "assignments",
          "collectionProcessors",
          "decisions",
          "loops",
          "orchestratedStages",
          "recordCreates",
          "recordDeletes",
          "recordLookups",
          "recordUpdates",
          "recordRollbacks",
          "screens",
          "start",
          "steps",
          "subflows",
          "waits",
        ],
        fsPath: "/Users/rubenhalman/Projects/FlowDemo/force-app/main/default/flows/Copy_API_Name.flow-meta.xml",
        name: "Copy_API_Name",
        xmldata: {
          $: {
            xmlns: "http://soap.sforce.com/2006/04/metadata",
          },
          apiVersion: [
            "51.0",
          ],
          description: [
            "This flow demonstrates a violation of the rule \"Copy API Name\".",
          ],
          environments: [
            "Default",
          ],
          interviewLabel: [
            "Copy API Name {!$Flow.CurrentDateTime}",
          ],
          label: [
            "Copy API Name",
          ],
          processMetadataValues: [
            {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
          ],
          processType: [
            "Flow",
          ],
          screens: [
            {
              name: [
                "Copy_1_of_mockscreen",
              ],
              label: [
                "Copy 1 of mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            {
              name: [
                "mockscreen",
              ],
              label: [
                "mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              connector: [
                {
                  targetReference: [
                    "Copy_1_of_mockscreen",
                  ],
                },
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
          ],
          start: [
            {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mockscreen",
                  ],
                },
              ],
            },
          ],
          status: [
            "Active",
          ],
        },
        label: [
          "Copy API Name",
        ],
        interviewLabel: [
          "Copy API Name {!$Flow.CurrentDateTime}",
        ],
        processType: [
          "Flow",
        ],
        processMetadataValues: [
          {
            name: [
              "BuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
          {
            name: [
              "CanvasMode",
            ],
            value: [
              {
                stringValue: [
                  "AUTO_LAYOUT_CANVAS",
                ],
              },
            ],
          },
          {
            name: [
              "OriginBuilderType",
            ],
            value: [
              {
                stringValue: [
                  "LightningFlowBuilder",
                ],
              },
            ],
          },
        ],
        startElementReference: undefined,
        start: [
          {
            locationX: [
              "50",
            ],
            locationY: [
              "0",
            ],
            connector: [
              {
                targetReference: [
                  "mockscreen",
                ],
              },
            ],
          },
        ],
        status: [
          "Active",
        ],
        type: [
          "Flow",
        ],
        root: {
          xmlns: "http://soap.sforce.com/2006/04/metadata",
        },
        elements: [
          {
            element: "51.0",
            subtype: "apiVersion",
            metaType: "metadata",
          },
          {
            element: "This flow demonstrates a violation of the rule \"Copy API Name\".",
            subtype: "description",
            metaType: "metadata",
          },
          {
            element: "Copy API Name {!$Flow.CurrentDateTime}",
            subtype: "interviewLabel",
            metaType: "metadata",
          },
          {
            element: "Copy API Name",
            subtype: "label",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "BuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "CanvasMode",
              ],
              value: [
                {
                  stringValue: [
                    "AUTO_LAYOUT_CANVAS",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "OriginBuilderType",
              ],
              value: [
                {
                  stringValue: [
                    "LightningFlowBuilder",
                  ],
                },
              ],
            },
            subtype: "processMetadataValues",
            metaType: "metadata",
          },
          {
            element: "Flow",
            subtype: "processType",
            metaType: "metadata",
          },
          {
            element: {
              name: [
                "Copy_1_of_mockscreen",
              ],
              label: [
                "Copy 1 of mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "242",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: undefined,
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
              },
            ],
            name: "Copy_1_of_mockscreen",
            locationX: "176",
            locationY: "242",
          },
          {
            element: {
              name: [
                "mockscreen",
              ],
              label: [
                "mockscreen",
              ],
              locationX: [
                "176",
              ],
              locationY: [
                "134",
              ],
              allowBack: [
                "true",
              ],
              allowFinish: [
                "true",
              ],
              allowPause: [
                "true",
              ],
              connector: [
                {
                  targetReference: [
                    "Copy_1_of_mockscreen",
                  ],
                },
              ],
              showFooter: [
                "true",
              ],
              showHeader: [
                "true",
              ],
            },
            subtype: "screens",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "Copy_1_of_mockscreen",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "Copy_1_of_mockscreen",
              },
            ],
            name: "mockscreen",
            locationX: "176",
            locationY: "134",
          },
          {
            element: {
              locationX: [
                "50",
              ],
              locationY: [
                "0",
              ],
              connector: [
                {
                  targetReference: [
                    "mockscreen",
                  ],
                },
              ],
            },
            subtype: "start",
            metaType: "node",
            connectors: [
              {
                element: [
                  {
                    targetReference: [
                      "mockscreen",
                    ],
                  },
                ],
                processed: false,
                type: "connector",
                childName: undefined,
                childOf: undefined,
                reference: "mockscreen",
              },
            ],
            name: "flowstart",
            locationX: "50",
            locationY: "0",
          },
          {
            element: "Active",
            subtype: "status",
            metaType: "metadata",
          },
        ],
        startReference: "mockscreen",
      },
      ruleResults: [
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "APIVersion",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Outdated API Version",
            description: "Introducing newer API components may lead to unexpected issues with older versions of Flows, as they might not align with the underlying mechanics. Starting from API version 50.0, the 'Api Version' attribute has been readily available on the Flow Object. To ensure smooth operation and reduce discrepancies between API versions, it is strongly advised to regularly update and maintain them.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/APIVersion.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "APIVersion",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "AutoLayout",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Auto-Layout Mode",
            description: "With Canvas Mode set to Auto-Layout, Elements are spaced, connected, and aligned automatically, keeping your Flow neatly organized thus saving you time.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/AutoLayout.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "AutoLayout",
          severity: "error",
          occurs: false,
        },
        {
          details: [
            {
              violation: {
                element: {
                  name: [
                    "Copy_1_of_mockscreen",
                  ],
                  label: [
                    "Copy 1 of mockscreen",
                  ],
                  locationX: [
                    "176",
                  ],
                  locationY: [
                    "242",
                  ],
                  allowBack: [
                    "true",
                  ],
                  allowFinish: [
                    "true",
                  ],
                  allowPause: [
                    "true",
                  ],
                  showFooter: [
                    "true",
                  ],
                  showHeader: [
                    "true",
                  ],
                },
                subtype: "screens",
                metaType: "node",
                connectors: [
                  {
                    element: undefined,
                    processed: false,
                    type: "connector",
                    childName: undefined,
                    childOf: undefined,
                  },
                ],
                name: "Copy_1_of_mockscreen",
                locationX: "176",
                locationY: "242",
              },
              name: "Copy_1_of_mockscreen",
              metaType: "node",
              type: "screens",
              details: {
                locationX: "176",
                locationY: "242",
                connectsTo: [
                  undefined,
                ],
              },
            },
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "CopyAPIName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Copy API Name",
            description: "Maintaining multiple elements with a similar name, like 'Copy_X_Of_Element,' can diminish the overall readability of your Flow. When copying and pasting these elements, it's crucial to remember to update the API name of the newly created copy.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/CopyAPIName.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "CopyAPIName",
          severity: "error",
          occurs: true,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "DMLStatementInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "DML Statement In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your database operations, including record creation, updates, or deletions, at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DMLStatementInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DMLStatementInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "DuplicateDMLOperation",
            supportedTypes: [
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Duplicate DML Operation",
            description: "When the flow executes database changes or actions between two screens, it's important to prevent users from navigating back between screens. Failure to do so may result in duplicate database operations being performed within the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/DuplicateDMLOperation.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "DuplicateDMLOperation",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "FlowDescription",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Flow Description",
            description: "Descriptions play a vital role in documentation. We highly recommend including details about where they are used and their intended purpose.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowDescription.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowDescription",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Naming your Flows is more critical than ever. By Stephen Church",
                path: "https://www.linkedin.com/posts/stephen-n-church_naming-your-flows-this-is-more-critical-activity-7099733198175158274-1sPx?utm_source=share&utm_medium=member_desktop",
              },
            ],
            name: "FlowName",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Flow Naming Convention",
            description: "The readability of a flow is of utmost importance. Establishing a naming convention for the Flow Name significantly enhances findability, searchability, and maintains overall consistency. It is advisable to include at least a domain and a brief description of the actions carried out in the flow, for instance, 'Service_OrderFulfillment'.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/FlowName.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "FlowName",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
              {
                label: "Don't hard code Record Type IDs in Flow. By Stephen Church.",
                path: "https://www.linkedin.com/feed/update/urn:li:activity:6947530300012826624/?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6947530300012826624%29",
              },
            ],
            name: "HardcodedId",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
              "Survey",
            ],
            label: "Hardcoded Id",
            description: "Avoid hard-coding IDs as they are org-specific. Instead, pass them into variables at the start of the flow. You can achieve this by utilizing merge fields in URL parameters or employing a Get Records element.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/HardcodedId.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "HardcodedId",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "MissingFaultPath",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Fault Path",
            description: "At times, a flow may fail to execute a configured operation as intended. By default, the flow displays an error message to the user and notifies the admin who created the flow via email. However, you can customize this behavior by incorporating a Fault Path.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingFaultPath.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingFaultPath",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "MissingNullHandler",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Missing Null Handler",
            description: "When a Get Records operation doesn't find any data, it returns null. To ensure data validation, utilize a decision element on the operation result variable to check for a non-null result.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/MissingNullHandler.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "MissingNullHandler",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Process Builder Retirement",
                path: "https://help.salesforce.com/s/articleView?id=000389396&type=1",
              },
            ],
            name: "ProcessBuilder",
            supportedTypes: [
              "Workflow",
            ],
            label: "No Process Builder",
            description: "Salesforce is transitioning away from Workflow Rules and Process Builder in favor of Flow. Ensure you're prepared for this transition by migrating your organization's automation to Flow. Refer to official documentation for more information on the transition process and tools available.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/ProcessBuilder.ts",
            isConfigurable: true,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "ProcessBuilder",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
              {
                label: "Flow Best Practices",
                path: "https://help.salesforce.com/s/articleView?id=sf.flow_prep_bestpractices.htm&type=5",
              },
            ],
            name: "SOQLQueryInLoop",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
            ],
            label: "SOQL Query In A Loop",
            description: "To prevent exceeding Apex governor limits, it is advisable to consolidate all your SOQL queries at the conclusion of the flow.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/SOQLQueryInLoop.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "SOQLQueryInLoop",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnconnectedElement",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unconnected Element",
            description: "To maintain the efficiency and manageability of your Flow, it's best to avoid including unconnected elements that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnconnectedElement.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnconnectedElement",
          severity: "error",
          occurs: false,
        },
        {
          details: [
          ],
          ruleDefinition: {
            docRefs: [
            ],
            name: "UnusedVariable",
            supportedTypes: [
              "AutoLaunchedFlow",
              "CustomEvent",
              "InvocableProcess",
              "Orchestrator",
              "EvaluationFlow",
              "ActionCadenceAutolaunchedFlow",
              "Flow",
              "IndividualObjectLinkingFlow",
              "LoginFlow",
              "RoutingFlow",
              "Appointments",
              "ActionCadenceStepFlow",
              "ContactRequestFlow",
              "ContactRequestFlow",
              "CustomerLifecycle",
              "FieldServiceMobile",
              "FieldServiceWeb",
              "SurveyEnrich",
            ],
            label: "Unused Variable",
            description: "To maintain the efficiency and manageability of your Flow, it's advisable to avoid including unconnected variables that are not in use.",
            uri: "https://github.com/Lightning-Flow-Scanner/lightning-flow-scanner-core/tree/master/src/main/rules/UnusedVariable.ts",
            isConfigurable: false,
            autoFixable: false,
            severity: "error",
          },
          ruleName: "UnusedVariable",
          severity: "error",
          occurs: false,
        },
      ],
    },
  ];